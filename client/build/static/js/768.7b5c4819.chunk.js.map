{"version":3,"file":"static/js/768.7b5c4819.chunk.js","mappings":"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","sources":["components/AddressAutocomplete.jsx","components/InformationPage.jsx","components/ShippingDetailsComponent.jsx","components/ShippingComponent.jsx","components/CartSummaryComponent.jsx","components/SquarePaymentForm.jsx","components/Common/LoadingModal.jsx","pages/CheckoutPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { TextField, InputAdornment, Tooltip, IconButton, CircularProgress } from '@mui/material';\n\nconst AddressAutocomplete = ({ id, label, fullWidth, variant, onAddressSelected, value, setValue, error, helperText, color, focused, onBlur, sx }) => {\n    const autocompleteInput = useRef(null);\n    const [isApiLoaded, setIsApiLoaded] = useState(!!window.google);\n    const API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n    useEffect(() => {\n        // Function to initialize the Autocomplete\n        const initAutocomplete = () => {\n            const autocomplete = new window.google.maps.places.Autocomplete(\n                autocompleteInput.current,\n                { types: ['address'] }\n            );\n\n            autocomplete.addListener('place_changed', () => {\n                const place = autocomplete.getPlace();\n                onAddressSelected(place); // Pass the place object to the parent component\n            });\n\n            setIsApiLoaded(true);\n        };\n        window.initAutocomplete = initAutocomplete\n        // Function to load the Google Maps API script\n        const loadScript = () => {\n            if (!document.querySelector('script[src*=\"googleapis\"]')) {\n                const script = document.createElement('script');\n                script.src = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&libraries=places&callback=initAutocomplete`;\n                script.async = true;\n                script.defer = true;\n                document.head.appendChild(script);\n            }\n        };\n\n\n        // Load script if Google Maps API is not already loaded\n        if (!window.google) {\n            loadScript();\n        } else {\n            initAutocomplete();\n        }\n        return () => {\n            // Remove the script tag\n            const script = document.getElementById('google-maps-script');\n            if (script) {\n                document.head.removeChild(script);\n            }\n\n            // Clean up the global function if it was added\n            if (window.initAutocomplete) {\n                delete window.initAutocomplete;\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onAddressSelected]);\n\n    return (\n        <TextField\n            inputRef={autocompleteInput}\n            id={id}\n            label={label}\n            fullWidth={fullWidth}\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n\n                        {isApiLoaded ? <Tooltip title=\"Google Places will help you validate your address\">\n                            <IconButton sx={{ mr: -1 }}>\n                                {/* magnify icon */}\n                                <svg height='20' fill='#0f75e0' viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z\" /></svg>\n                            </IconButton>\n                        </Tooltip> : <CircularProgress size={20} thickness={4} color=\"primary\" />}\n                    </InputAdornment>\n                ),\n            }}\n            variant={variant}\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            helperText={helperText}\n            error={error}\n            color={color}\n            focused={focused}\n            onBlur={onBlur}\n            autoComplete='address'\n            sx={sx}\n        />\n\n    );\n};\n\n\nexport default AddressAutocomplete;","import React, { useEffect, useState } from 'react';\nimport { TextField, Button, Grid, Typography, FormControl, InputAdornment, Tooltip, IconButton } from '@mui/material';\nimport AddressAutocomplete from './AddressAutocomplete';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { jwtDecode } from 'jwt-decode';\nimport { useAuth } from './Utilities/useAuth';\nimport '../Styles/CheckoutPage.css'\nconst InformationComponent = ({ next, back, onShippingDetailsSubmit, formData }) => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [address, setAddress] = useState('');\n    const [address2, setAddress2] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zip, setZip] = useState('');\n    const [country, setCountry] = useState('');\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const { isLoggedIn } = useAuth();\n    const storedFirstName = localStorage.getItem('userFirstName');\n    const storedLastName = localStorage.getItem('userLastName');\n    const storedEmail = localStorage.getItem('userEmail');\n    const storedPhone = localStorage.getItem('userPhone');\n    const storedAddress = localStorage.getItem('userAddress');\n    const storedAddress2 = localStorage.getItem('userAddress2');\n    const storedCity = localStorage.getItem('userCity');\n    const storedState = localStorage.getItem('userState');\n    const storedZip = localStorage.getItem('userZip');\n    const storedCountry = localStorage.getItem('userCountry');\n\n\n\n    const isGuestUser = () => {\n        const customerId = localStorage.getItem('customerId');\n        const isGuestFlag = localStorage.getItem('isGuest') === 'true';\n\n        return (customerId && customerId.startsWith('guest-')) || isGuestFlag;\n\n    };\n\n    //useeffect to fetch customer data on page mount\n    useEffect(() => {\n        if (isGuestUser()) {\n\n        } else {\n            const token = localStorage.getItem('token');\n            const decodedToken = jwtDecode(token);\n            const userId = decodedToken.customerId;\n            fetchCustomerData(userId);\n        }\n\n    }, []);\n\n\n    const fetchCustomerData = (userId) => {\n\n        fetch(`http://localhost:8000/api/customer/${userId}`, {\n            credentials: 'include'\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setPhone(data.phone);\n                setAddress(data.address);\n                setAddress2(data.address2);\n                setCity(data.city);\n                setState(data.state);\n                setZip(data.zip);\n                setCountry(data.country);\n            })\n            .catch((error) => {\n                console.error('Error fetching customer data:', error);\n            });\n    };\n\n\n    useEffect(() => {\n\n        if (!formSubmitted) {\n            // Update local state with formData values\n            setFirstName(formData.firstName || storedFirstName || '');\n            setLastName(formData.lastName || storedLastName || '');\n            setEmail(formData.email || storedEmail || '');\n            setPhone(formData.phone || storedPhone || '');\n            setAddress(formData.address || storedAddress || '');\n            setAddress2(formData.address2 || storedAddress2 || '');\n            setCity(formData.city || storedCity || '');\n            setState(formData.state || storedState || '');\n            setZip(formData.zip || storedZip || '');\n            setCountry(formData.country || storedCountry || '');\n        }\n\n\n    }, [formData, formSubmitted, storedAddress, storedAddress2, storedCity, storedCountry, storedEmail, storedFirstName, storedLastName, storedPhone, storedState, storedZip]);\n\n    const [errors, setErrors] = useState({\n        email: '',\n        firstName: '',\n        lastName: '',\n        phone: '',\n        address: '',\n        city: '',\n        state: '',\n        zip: '',\n        country: ''\n    });\n\n\n\n\n    const validateField = (fieldName, value) => {\n        let errorMsg = '';\n        switch (fieldName) {\n            case 'email':\n                if (!value) {\n                    errorMsg = \"Email is required\";\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n                    errorMsg = \"Invalid email address\";\n                }\n                break;\n            case 'firstName':\n                errorMsg = !value ? \"First name is required\" : '';\n                break;\n            case 'lastName':\n                errorMsg = !value ? \"Last name is required\" : '';\n                break;\n            case 'address':\n                errorMsg = !value ? \"Address is required\" : '';\n                break;\n            case 'city':\n                errorMsg = !value ? \"City is required\" : '';\n                break;\n            case 'state':\n                errorMsg = !value ? \"State is required\" : '';\n                break;\n            case 'zip':\n                errorMsg = !value ? \"Zip code is required\" : !/^\\d{5}(-\\d{4})?$/.test(value) ? \"Invalid zip code\" : '';\n                break;\n            case 'country':\n                errorMsg = !value ? \"Country is required\" : '';\n                break;\n            default:\n                break;\n        }\n        setErrors(prevErrors => ({ ...prevErrors, [fieldName]: errorMsg }));\n        return !errorMsg;\n    };\n\n\n\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        // Validate each field and check if the form is valid\n        const isEmailValid = validateField('email', email);\n        const isFirstNameValid = validateField('firstName', firstName);\n        const isLastNameValid = validateField('lastName', lastName);\n        const isAddressValid = validateField('address', address);\n        const isCityValid = validateField('city', city);\n        const isStateValid = validateField('state', state);\n        const isZipValid = validateField('zip', zip);\n        const isCountryValid = validateField('country', country);\n\n        const isFormValid = isEmailValid && isFirstNameValid && isLastNameValid && isAddressValid && isCityValid && isStateValid && isZipValid && isCountryValid;\n\n        if (!isFormValid) {\n            return; // Stop submission if any validation fails\n        }\n\n        // Proceed with form submission if all validations pass\n        const details = {\n\n            email,\n            firstName,\n            lastName,\n            phone,\n            address,\n            address2,\n            city,\n            state,\n            zip,\n            country\n        };\n\n        onShippingDetailsSubmit(details);\n        setFormSubmitted(true)\n        submitFormData(details);\n\n        next(); // Proceed to the next step\n    };\n\n    const doesFormDataMatchLocalStorage = (formData) => {\n        const keys = ['firstName', 'lastName', 'email', 'phone', 'address', 'address2', 'city', 'state', 'zip', 'country'];\n        return keys.every(key => formData[key] === localStorage.getItem('user' + key.charAt(0).toUpperCase() + key.slice(1)));\n    };\n\n\n    const submitFormData = async (data) => {\n        try {\n            let response;\n\n            if (isGuestUser()) {\n                const customerId = localStorage.getItem('customerId');\n\n                // New guest user or guest user with updated information\n                if (!customerId || customerId.startsWith('guest-') || !doesFormDataMatchLocalStorage(data)) {\n                    const url = customerId && !customerId.startsWith('guest-')\n                        ? `http://localhost:8000/api/guest/${customerId}` // URL for updating existing guest\n                        : `http://localhost:8000/api/guest`; // URL for creating new guest\n\n                    const method = customerId && !customerId.startsWith('guest-') ? 'PUT' : 'POST';\n\n                    // Send a POST (for new guest) or PUT (for existing guest) request\n                    response = await fetch(url, {\n                        method: method,\n                        credentials: 'include',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify(data)\n                    });\n\n                    if (response.ok) {\n                        const responseData = await response.json();\n                        const idToStore = method === 'POST' ? responseData._id : customerId;\n                        localStorage.setItem('customerId', idToStore);\n                        localStorage.setItem('isGuest', 'true');\n                        Object.keys(data).forEach(key => {\n                            localStorage.setItem('user' + key.charAt(0).toUpperCase() + key.slice(1), data[key]);\n                        });\n                    } else {\n                        const errorData = await response.json();\n                        console.error(\"Failed to submit form data:\", errorData.message);\n                        return;\n                    }\n                }\n            } else {\n                const { email, firstName, lastName, ...dataToSend } = data;\n                response = await fetch(`http://localhost:8000/api/customer/${localStorage.getItem('customerId')}`, {\n                    method: 'PUT', // Use POST for creating or PUT for updating\n\n                    headers: {\n                        'Content-Type': 'application/json',\n                        // Include authentication token if required\n\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify(dataToSend)\n                });\n\n            }\n            if (response && !response.ok) {\n                const errorData = await response.json();\n                console.error(\"Failed to submit form data:\", errorData.message);\n            } else if (response && response.ok) {\n                console.log(\"Form data submitted successfully\");\n            }\n\n        } catch (error) {\n            console.error(\"Error submitting form data:\", error);\n        }\n    };\n\n    const handleAddressChange = (place) => {\n        let streetNumber = '';\n        let route = '';\n        setAddress('');\n        setAddress2('');\n        setCity('');\n        setState('');\n        setZip('');\n        setCountry('');\n\n        place.address_components.forEach(component => {\n            const componentType = component.types[0];\n            if (componentType === 'street_number') {\n                streetNumber = component.long_name;\n            } else if (componentType === 'route') {\n                route = component.long_name;\n            }\n            switch (componentType) {\n                case \"street_number\":\n                    streetNumber = component.long_name;\n                    break;\n                case \"route\":\n                    route = component.long_name;\n                    break;\n                case \"locality\":\n                    setCity(component.long_name);\n                    break;\n                case \"administrative_area_level_1\":\n                    setState(component.short_name);\n                    break;\n                case \"postal_code\":\n                    setZip(component.long_name);\n                    break;\n                case \"country\":\n                    setCountry(component.long_name);\n                    break;\n                default:\n                    // Unknown component type\n                    break;\n            }\n\n\n        });\n\n        // Combine street number and route to form the street address\n        const streetAddress = streetNumber && route ? `${streetNumber} ${route}` : route;\n        setAddress(streetAddress); // Set only the street address for the \"Address line 1\" field\n    };\n\n\n    const formatPhoneNumber = (value) => {\n        if (!value) return value;\n\n        const phoneNumber = value.replace(/[^\\d]/g, '');\n        const phoneNumberLength = phoneNumber.length;\n\n        if (phoneNumberLength < 4) return phoneNumber;\n\n        if (phoneNumberLength < 7) {\n            return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n        }\n\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n    };\n    const handlePhoneChange = (e) => {\n        const formattedPhoneNumber = formatPhoneNumber(e.target.value);\n        setPhone(formattedPhoneNumber);\n    };\n\n\n\n\n\n    const textFieldStyles = {\n\n        '& .MuiInputBase-input': {\n            fontSize: '14px' // Adjust the font size as needed\n        },\n        '& .MuiInputLabel-root': {\n            fontSize: '14px' // Adjust the font size as needed\n        },\n        border: '0,1px solid black'\n\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit} className='information-form-container'>\n            <FormControl>\n                <Typography fontWeight={600} fontSize={16} pb={2} mb={1} variant=\"h6\" className='information-titles' >\n                    Contact\n                </Typography>\n                <TextField\n\n                    type='email'\n                    required\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    value={email || ''}\n                    onChange={(e) => setEmail(e.target.value)}\n                    helperText={errors.email || ' '}\n                    error={!!errors.email}\n                    color={email && !errors.email ? 'success' : 'primary'}\n                    focused={!!email}\n                    autoComplete=\"email\"\n                    variant=\"outlined\"\n                    onBlur={() => validateField('email', email)}\n                    sx={textFieldStyles}\n                    disabled={!!isLoggedIn && !!email}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\" >\n                                {isLoggedIn && email ? ( // Check if the field is disabled\n                                    <Tooltip title=\"To Change Your Email Please Go To The Account Page By Clicking the Account Icon On The Top Right Of The Page\">\n                                        <IconButton sx={{ mr: -1, }}>\n                                            <svg fill='#0f75e0' height='20' viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z\" /></svg>\n                                        </IconButton>\n                                    </Tooltip>\n                                ) : null}\n                            </InputAdornment>\n                        ),\n                    }}\n                >\n\n                    Email</TextField>\n                <TextField\n                    required\n                    type='tel'\n                    id=\"phone\"\n                    name=\"phone\"\n                    label=\"phone (optional)\"\n                    value={phone || ''}\n                    onChange={handlePhoneChange}\n                    color={phone && !errors.phone ? 'success' : 'primary'}\n                    focused={!!phone}\n                    autoComplete=\"phone\"\n                    variant=\"outlined\"\n                    sx={textFieldStyles}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\" >\n                                <Tooltip title=\"Incase we need to contact you about your order\">\n                                    <IconButton sx={{ mr: -1, }}>\n                                        <svg fill='#0f75e0' height='20' viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z\" /></svg>\n                                    </IconButton>\n                                </Tooltip>\n                            </InputAdornment>\n                        ),\n                    }}\n\n                >Phone</TextField>\n                <Typography fontWeight={600} fontSize={16} pb={2} my={1} variant=\"h6\" className='information-titles'  >\n                    Shipping Information\n                </Typography>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} sm={6} >\n                        <TextField\n                            fullWidth\n                            required\n                            type='text'\n                            id=\"firstName\"\n                            name=\"firstName\"\n                            label=\"First Name\"\n                            value={firstName || ''}\n                            onChange={(e) => setFirstName(e.target.value)}\n                            error={!!errors.firstName}\n                            helperText={errors.firstName || ' '}\n                            autoComplete=\"given-name\"\n                            variant=\"outlined\"\n                            color={firstName && !errors.firstName ? 'success' : 'primary'}\n                            onBlur={() => validateField('firstName', firstName)}\n                            focused={!!firstName}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            autoComplete=\"family-name\"\n                            value={lastName || ''}\n                            onChange={e => { setLastName(e.target.value); }}\n                            error={!!errors.lastName}\n                            helperText={errors.lastName || ' '}\n                            color={lastName && !errors.lastName ? 'success' : 'primary'}\n                            id=\"lastName\"\n                            name=\"lastName\"\n                            label=\"Last Name\"\n                            fullWidth\n                            variant=\"outlined\"\n                            onBlur={() => validateField('lastName', lastName)}\n                            focused={!!lastName}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <AddressAutocomplete\n\n                            id=\"address\"\n                            label=\"Address line 1*\"\n                            fullWidth\n                            error={!!errors.address}\n                            helperText={errors.address || ' '}\n                            color={address && !errors.address ? 'success' : 'primary'}\n                            onAddressSelected={handleAddressChange}\n                            value={address || ''}\n                            setValue={setAddress}\n                            focused={!!address}\n                            onBlur={() => validateField('address', address)}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n\n                        <TextField\n                            helperText={<span>\n                                {/* information icon */}\n                                <svg height='16' style={{ transform: 'translateY(3px)' }} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z\" /></svg>\n                                {' Add a Building /Appartment number if you have one'}\n                            </span>}\n                            id=\"address2\"\n                            name=\"address2\"\n                            label=\"Address line 2 (optional)\"\n                            fullWidth\n                            autoComplete=\"shipping address-line2\"\n                            variant=\"outlined\"\n                            onChange={e => setAddress2(e.target.value)}\n                            value={address2 || ''}\n                            sx={textFieldStyles}\n                            focused={!!address2}\n                            color={address2 ? 'success' : 'primary'}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n\n                        <TextField\n                            value={city || ''}\n                            onChange={e => { setCity(e.target.value); }}\n                            onBlur={() => validateField('city', city)}\n                            error={!!errors.city}\n                            helperText={errors.city || ' '}\n                            color={city && !errors.city ? 'success' : 'primary'}\n                            required\n                            id=\"city\"\n                            name=\"city\"\n                            label=\"City\"\n                            fullWidth\n                            autoComplete=\"shipping address-level2\"\n                            variant=\"outlined\"\n                            focused={!!city}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            value={state || ''}\n                            onChange={e => { setState(e.target.value); }}\n                            error={!!errors.state}\n                            helperText={errors.state || ' '}\n                            color={state && !errors.state ? 'success' : 'primary'}\n                            required\n                            id=\"state\"\n                            name=\"state\"\n                            label=\"State\"\n                            fullWidth\n                            autoComplete=\"administrative_area_level_1\"\n                            variant=\"outlined\"\n                            onBlur={() => validateField('state', state)}\n                            focused={!!state}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            value={zip || ''}\n                            onChange={e => { setZip(e.target.value); }}\n                            error={!!errors.zip}\n                            helperText={errors.zip || ' '}\n                            color={zip && !errors.zip ? 'success' : 'primary'}\n                            required\n                            id=\"zip\"\n                            name=\"zip\"\n                            label=\"ZIP code\"\n                            fullWidth\n                            autoComplete=\"postal_code\"\n                            variant=\"outlined\"\n                            onBlur={() => validateField('zip', zip)}\n                            focused={!!zip}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <TextField\n                            value={country || ''}\n                            onChange={e => {\n                                setCountry(e.target.value);\n\n                            }}\n                            error={!!errors.country}\n                            helperText={errors.country || ' '}\n                            color={country && !errors.country ? 'success' : 'primary'}\n                            required\n                            id=\"country\"\n                            name=\"country\"\n                            label=\"Country/Region\"\n                            fullWidth\n                            autoComplete=\"country\"\n                            variant=\"outlined\"\n                            onBlur={() => validateField('country', country)}\n                            focused={!!country}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} className='information-buttons'>\n\n                        <Button onClick={back} variant=\"outlined\" sx={{ height: 55, m: 1, letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, '&:hover': { backgroundColor: '#0F75E0', color: 'white', } }}>\n                            <ArrowBackIosNewIcon sx={{ fontSize: 18, mr: 1, display: { xs: 'none', sm: 'block' } }} />\n                            Back to cart</Button>\n\n\n\n                        <Button onClick={handleSubmit} variant=\"outlined\" sx={{ letterSpacing: 2, color: 'white', backgroundColor: '#283047', \"&:hover\": { backgroundColor: '#FE6F49', border: '1px solid #FE6F49 ', }, textAlign: 'center', height: 55 }} ><span className='cartSummary-checkout-text'>Proceed</span>  to Shipping</Button>\n                    </Grid>\n                </Grid>\n            </FormControl>\n        </form >\n    );\n};\n\nexport default InformationComponent;","import { Button, Typography } from '@mui/material';\nimport React from 'react'\n\nconst ShippingDetailsComponent = ({ shippingDetails, back }) => {\n    const buttonStyle = { textDecoration: 'underline', fontSize: 12 }\n\n    return (\n        <div className='checkout-shipping'>\n            {/* Contact Information */}\n            <Typography variant='h6' >Contact:</Typography>\n            <div className='checkout-shipping-contact'>\n                <Typography variant=\"subtitle1\"> Contact:</Typography>\n                <div className='checkout-shipping-change'>\n                    <Typography variant=\"body2\" fontWeight={100}>{shippingDetails.phone}</Typography>\n                    <Typography variant=\"body2\" fontWeight={100}>{shippingDetails.email}</Typography>\n                    <Button onClick={back} style={buttonStyle}>Change</Button>\n                </div>\n            </div>\n\n            {/* Shipping Address */}\n            <div className='checkout-shipping-address'>\n                <Typography variant=\"subtitle1\">Ship to:</Typography>\n                <div className=\"checkout-shipping-change\">\n                    <Typography fontWeight={100} variant=\"body2\">{shippingDetails.firstName + ' ' + shippingDetails.lastName}</Typography>\n                    <Typography fontWeight={100} variant=\"body2\">\n                        {`${shippingDetails.address} ${shippingDetails.address2}, ${shippingDetails.city}, ${shippingDetails.state} ${shippingDetails.zip}, ${shippingDetails.country}`}\n                    </Typography>\n                    <Button onClick={back} style={buttonStyle}>Change</Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ShippingDetailsComponent","import React, { useState, useEffect } from 'react';\nimport { Typography, Grid, List, ListItem, ListItemText, Button, CircularProgress, Box, ListItemAvatar } from '@mui/material';\nimport '../Styles/CheckoutPage.css'\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { format, addDays } from 'date-fns';\nimport ShippingDetailsComponent from './ShippingDetailsComponent';\nconst ShippingComponent = ({ cartItems, shippingDetails, onShippingCostChange, back, isLoading, onShippingOptionsChange, handleCheckout, setEstimatedShipping, lastAddress, setLastAddress, shipmentOptions, setShipmentOptions, fullCost, setShippingDetails }) => {\n\n\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [loading, setLoading] = useState(false);\n    //const [shippingCost, setShippingCost] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 4;\n    const [buttonDisabled, setButtonDisabled] = useState([]);\n    const [isShippingOptionSelected, setIsShippingOptionSelected] = useState(false);\n    const [checkoutError, setCheckoutError] = useState('');\n\n    let totalWeight = 0;\n    let maxLength = 0;\n    let maxWidth = 0;\n    let maxHeight = 0;\n\n    const defaultDimensions = {\n        length: 5,\n        width: 5,\n        height: 5,\n        weight: 2\n    };\n\n\n\n    cartItems.forEach(item => {\n\n        // Use item dimensions if available, otherwise use default dimensions\n        const itemLength = item.length || defaultDimensions.length;\n        const itemWidth = item.width || defaultDimensions.width;\n        const itemHeight = item.height || defaultDimensions.height;\n        const itemWeight = item.weight * item.quantity;\n\n        totalWeight += itemWeight;\n        maxLength = Math.max(maxLength, itemLength);\n        maxWidth = Math.max(maxWidth, itemWidth);\n        maxHeight = Math.max(maxHeight, itemHeight);\n\n    });\n\n\n    const calculateShippingDate = (estimatedDays) => {\n        // Check for invalid or missing estimatedDays\n        if (estimatedDays === null || estimatedDays === undefined || estimatedDays === '' || isNaN(estimatedDays)) {\n            return 'Estimated delivery date not available'; // Fallback message\n        }\n\n        const currentDate = new Date();\n        const shippingDate = addDays(currentDate, estimatedDays);\n        return format(shippingDate, 'MMMM do, yyyy'); // Format date as \"Month day, year\"\n    };\n\n\n\n\n    const calculateShipping = async () => {\n\n\n        if (JSON.stringify(lastAddress) === JSON.stringify(shippingDetails)) {\n            // The address hasn't changed, no need to fetch new rates\n            setShippingOptions(shipmentOptions);\n            return;\n        }\n        try {\n            setLoading(true);\n\n\n            const backendUrl = 'http://localhost:8000/api/shippo';\n            const shipmentDetails = {\n\n                addressTo: {\n                    name: `${shippingDetails.firstName} ${shippingDetails.lastName}`,\n                    street1: shippingDetails.address,\n                    street2: shippingDetails.address2,\n                    city: shippingDetails.city,\n                    state: shippingDetails.state,\n                    zip: shippingDetails.zip,\n                    country: shippingDetails.country\n                },\n\n                parcel: {\n                    length: maxLength.toString(),\n                    width: maxWidth.toString(),\n                    height: maxHeight.toString(),\n                    distance_unit: \"in\",\n                    weight: totalWeight.toString(),\n                    mass_unit: \"oz\"\n                }\n            };\n\n            // Make a POST request to your backend\n            const response = await fetch(backendUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(shipmentDetails),\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text(); // Or response.json() if the response is in JSON format\n                console.error(`HTTP Error: ${response.status} ${response.statusText}`, errorText);\n                throw new Error(`HTTP Error: ${response.status}`);\n            }\n            else {\n                const result = await response.json();\n\n                let sortedRates = result.rates.sort((a, b) => parseFloat(a.amount) - parseFloat(b.amount));\n                if (fullCost.subTotal > 50 || fullCost.subTotal <= 0.03) {\n                    sortedRates = sortedRates.map(rate => ({\n                        ...rate,\n                        amount_local: parseFloat(rate.amount_local) < 10 ? 0.00 : rate.amount_local,\n                        isFree: parseFloat(rate.amount_local) < 10\n                    }));\n                }\n                setShippingOptions(sortedRates); // sorted by cost\n                setLastAddress(shippingDetails);\n                setShipmentOptions(sortedRates);\n\n            }\n\n        } catch (error) {\n            console.error('There was a problem with the fetch operation:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (shippingDetails && shippingDetails.address) { // Check that required details are present\n            calculateShipping();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    useEffect(() => {\n        setButtonDisabled(new Array(shippingOptions.length).fill(false));\n    }, [shippingOptions]);\n\n    const handleSelectShippingOption = (cost, index) => {\n        const formattedShipping = currentItems.map((option,) => (calculateShippingDate(option.estimated_days)))\n        // Check if the selected option is free\n        if (shippingOptions[index].isFree) {\n            cost = 0.00;\n        }\n\n        //setShippingCost(cost);\n        onShippingCostChange(cost); // Pass the cost to the parent component\n        //Pass the selected shipping option to the parent component\n        onShippingOptionsChange(shippingOptions[index]);\n\n        setEstimatedShipping(formattedShipping[index]);\n\n        // Create a new array with all false, except the index that needs to be disabled\n        const updatedDisabledState = buttonDisabled.map((item, idx) => idx === index);\n        setButtonDisabled(updatedDisabledState);\n        setIsShippingOptionSelected(true);\n        shippingOptions[index].parcel = {\n            length: maxLength.toString(),\n            width: maxWidth.toString(),\n            height: maxHeight.toString(),\n            distance_unit: \"in\",\n            weight: totalWeight.toString(),\n            mass_unit: \"oz\"\n        }\n\n        setShippingDetails({ ...shippingOptions[index], ...shippingDetails });\n\n    };\n\n\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItems = shippingOptions.slice(indexOfFirstItem, indexOfLastItem);\n\n    const goToNextPage = () => {\n        setCurrentPage(currentPage + 1);\n    };\n\n    const goToPreviousPage = () => {\n        setCurrentPage(currentPage - 1);\n    };\n\n\n\n\n    const handleLocalCheckout = () => {\n        if (!isShippingOptionSelected) {\n            setCheckoutError('Please select a shipping option to proceed.');\n            return;\n        }\n        handleCheckout();\n    };\n\n    return (\n        <Box className='checkout-shipping-container'>\n\n\n            <ShippingDetailsComponent\n                shippingDetails={shippingDetails}\n                back={back}\n\n            />\n            {loading ? <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                <CircularProgress />\n                Getting Shipping Rates...\n            </Box> :\n                <List>\n\n                    {/* Shipping Options */}\n                    <Typography variant=\"h6\" >\n                        Shipping Method\n                    </Typography>\n                    {checkoutError && (\n                        <Typography color=\"error\" style={{ margin: '10px 0' }}>\n                            {checkoutError}\n                        </Typography>\n                    )}\n\n                    <Box >\n                        <List>\n                            {currentItems.map((option, index) => (\n                                <ListItem\n                                    key={index}\n                                    style={{\n                                        backgroundColor: buttonDisabled[index] ? 'rgba(15, 117, 224, 0.1)' : '',\n                                        borderColor: checkoutError ? '#D23030' : ''\n\n                                    }}\n                                    className={`checkout-shipping-item-${+index}`}\n                                >\n\n                                    <div className='checkout-shipping-item-container'>\n                                        <div >\n                                            <ListItemText className='checkout-shipping-name' primary={option.servicelevel.name} secondary={`Estimated Delivery: ${calculateShippingDate(option.estimated_days)}`} />\n                                            <ListItemAvatar >\n                                                <img src={option.provider_image_75} alt=\"index\" />\n                                            </ListItemAvatar>\n                                        </div>\n                                        <div className='checkout-shipping-item-price-container'>\n                                            <ListItemText className='checkout-shipping-price' primary={option.isFree ? 'Free' : '$' + option.amount_local} style={{ marginRight: '5px' }} />\n\n\n                                            <Button disabled={buttonDisabled[index]} className='checkout-shipping-button' sx={{ fontSize: 12, minWidth: '80px', ml: 2 }} variant=\"outlined\" onClick={() => handleSelectShippingOption(option.amount_local, index)}>\n                                                {buttonDisabled[index] ? 'Selected' : 'Select'}\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </ListItem>\n                            ))}\n\n                        </List>\n                    </Box>\n                    {/* Shipping Options Selector */}\n                    <Grid container style={{ marginTop: '20px', justifyContent: 'space-between' }}>\n                        {currentPage > 1 && (\n                            <Button variant=\"contained\" onClick={goToPreviousPage}>\n                                Previous\n                            </Button>\n                        )}\n                        {indexOfLastItem < shippingOptions.length && (\n                            <Button variant=\"contained\" onClick={goToNextPage}>\n                                {currentPage === 1 ? 'See More Shipping Options' : 'Next'}\n                            </Button>\n                        )}\n                    </Grid>\n\n                </List>\n\n            }\n\n\n            {/* Proceed to Payment Button */}\n            <Grid container sx={{ marginTop: '20px', justifyContent: 'space-between', marginLeft: { xs: 3.5, sm: 0 } }}>\n\n                <Button onClick={back} variant=\"outlined\" sx={{ m: 1, width: { xs: '75%', sm: '45%', md: '230px' }, letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, height: 55, '&:hover': { backgroundColor: '#0F75E0', color: 'white', } }}>\n                    <ArrowBackIosNewIcon sx={{ fontSize: 18, mr: 1 }} />\n                    Return to information</Button>\n                <Button disabled={!!isLoading} onClick={handleLocalCheckout} variant=\"outlined\" sx={{ m: 1, width: { xs: '75%', sm: '45%', md: '230px' }, letterSpacing: 2, color: 'white', backgroundColor: '#283047', height: 56.5, \"&:hover\": { backgroundColor: '#FE6F49', border: 'none', }, textAlign: 'center' }}>\n                    {isLoading ? (\n                        <CircularProgress\n                            size={24}\n                            sx={{ color: '#0F75E0' }}\n                        />\n                    ) : (\n                        <>\n                            <span className='cartSummary-checkout-text'>Proceed to </span> Payment\n                        </>\n                    )}\n                </Button>\n\n\n            </Grid>\n        </Box>\n    );\n};\n\nexport default ShippingComponent;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Typography, List, ListItem, ListItemText, Box, IconButton, Button, Badge } from '@mui/material';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport AddIcon from '@mui/icons-material/Add';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { Link } from 'react-router-dom';\nimport '../Styles/CheckoutPage.css'\nconst CartSummaryComponent = ({ cartItems, shippingCost, total, removeFromCart, adjustQuantity, next, step, setFullCost }) => {\n    // Helper function to format cost display\n    const formatCost = (cost) => {\n        return (typeof cost === 'number') ? `$${cost.toFixed(2)}` : cost;\n    };\n    const tax = total * 0.11;\n    const validShippingCost = isNaN(shippingCost) ? 0 : Number(shippingCost);\n    const grandTotal = total + validShippingCost + tax;\n    const boxRef = useRef(null);\n    const [showScrollIcon, setShowScrollIcon] = useState(false);\n\n    useEffect(() => {\n        if (cartItems.length < 2) {\n            return;\n        }\n        const checkOverflow = () => {\n            const isOverflowing = boxRef.current.scrollHeight > boxRef.current.clientHeight;\n            setShowScrollIcon(isOverflowing);\n        };\n        // Check if the content is overflowing when the component mounts\n        checkOverflow();\n\n        // Optional: Re-check on window resize\n        window.addEventListener('resize', checkOverflow);\n        return () => window.removeEventListener('resize', checkOverflow);\n    }, []);\n    const scrollToBottom = () => {\n        if (boxRef.current) {\n            boxRef.current.scrollTop = boxRef.current.scrollHeight;\n        }\n    };\n    //useEffect to update the grandtotal to equal full cost\n    useEffect(() => {\n        setFullCost({\n            subTotal: total,\n            grandTotal: grandTotal,\n            tax: Number(tax.toFixed(2)),\n            shippingCost: validShippingCost,\n        });\n    }\n        , [grandTotal])\n\n\n\n    return (\n        <div className='cartSummary-container' >\n\n\n            <List disablePadding >\n                <Box ref={boxRef} sx={{ maxHeight: '60vh', minHeight: '65vh', overflow: 'auto', mt: { xs: 1, sm: -2.5 }, mb: -1.25, }}>\n\n                    <Typography variant=\"h1\" component=\"h1\" sx={{ borderBottom: .1, my: 2, textAlign: 'center', fontSize: 'h5.fontSize' }} gutterBottom>\n\n                        Order Summary\n                    </Typography>\n                    {cartItems.length === 0 ? (\n\n                        // This section renders when the cart is empty\n                        <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: \"center\", height: '50vh' }}>\n                            <Typography align=\"center\" sx={{ mt: 3, fontVariant: 'all-small-caps', fontSize: { xs: 16, sm: 20, md: 22 }, fontWeight: 100 }}>\n                                Your Cart Is Empty!\n\n                            </Typography>\n\n                            <svg height='150' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\">\n                                <path d=\"M922.9 701.9H327.4l29.9-60.9 496.8-.9c16.8 0 31.2-12 34.2-28.6l68.8-385.1c1.8-10.1-.9-20.5-7.5-28.4a34.99 34.99 0 0 0-26.6-12.5l-632-2.1-5.4-25.4c-3.4-16.2-18-28-34.6-28H96.5a35.3 35.3 0 1 0 0 70.6h125.9L246 312.8l58.1 281.3-74.8 122.1a34.96 34.96 0 0 0-3 36.8c6 11.9 18.1 19.4 31.5 19.4h62.8a102.43 102.43 0 0 0-20.6 61.7c0 56.6 46 102.6 102.6 102.6s102.6-46 102.6-102.6c0-22.3-7.4-44-20.6-61.7h161.1a102.43 102.43 0 0 0-20.6 61.7c0 56.6 46 102.6 102.6 102.6s102.6-46 102.6-102.6c0-22.3-7.4-44-20.6-61.7H923c19.4 0 35.3-15.8 35.3-35.3a35.42 35.42 0 0 0-35.4-35.2zM305.7 253l575.8 1.9-56.4 315.8-452.3.8L305.7 253zm96.9 612.7c-17.4 0-31.6-14.2-31.6-31.6 0-17.4 14.2-31.6 31.6-31.6s31.6 14.2 31.6 31.6a31.6 31.6 0 0 1-31.6 31.6zm325.1 0c-17.4 0-31.6-14.2-31.6-31.6 0-17.4 14.2-31.6 31.6-31.6s31.6 14.2 31.6 31.6a31.6 31.6 0 0 1-31.6 31.6z\" />\n                            </svg>\n                            <Button to=\"/shop\" component={Link} sx={{ border: 1, width: '50%', borderRadius: 0, letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, height: 55, '&:hover': { backgroundColor: '#0F75E0', color: 'white' } }} > Start Shopping</Button>\n                        </Box>\n                    ) : (\n                        cartItems.map((item, index) => (\n                            <Box key={'product:' + index} sx={{ display: 'flex', mx: { xs: 2, sm: 5 }, my: 2 }}>\n                                <Badge badgeContent={item.quantity} color=\"secondary\" sx={{ '.MuiBadge-badge': { backgroundColor: 'rgba(195, 26, 210, 0.72)', color: 'white' } }}>\n                                    <img className='cart-img' src={item.img}\n                                        alt={item.name} width={80} height={80} loading='lazy' />\n                                </Badge>\n                                <Box >\n                                    <Box sx={{\n                                        ml: 1,\n\n                                    }}>\n                                        <Typography sx={{\n                                            fontWeight: 500,\n                                            fontSize: 18,\n                                            fontFamily: '\"Avenir Next\", sans-serif',\n                                            fontVariantCaps: 'all-small-caps',\n                                            lineHeight: { xs: 1 },\n                                            width: { xs: 'auto', md: '100%' }\n                                        }}\n                                            variant=\"h6\">{item.name}</Typography>\n                                        <Typography sx={{ fontFamily: '\"Avenir Next\", sans-serif', fontWeight: 200, color: 'black', fontVariantCaps: 'all-small-caps', lineHeight: 1 }}>{item.specs}</Typography>\n\n                                    </Box>\n                                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: { xs: '260px', md: '290px' } }}>\n                                        <Typography sx={{ fontWeight: 100, color: 'gray', ml: 1, }}>${item.price.toFixed(2) * item.quantity}</Typography>\n                                        {/* Quantity Controls */}\n                                        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' }, justifyContent: 'space-between', alignItems: \"center\" }}>\n                                            <Box sx={{ border: 1, width: 100, display: step > 1 ? 'none' : 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                                <IconButton onClick={() => adjustQuantity(item._id, item.quantity - 1)}>\n                                                    <RemoveIcon sx={{ fontSize: 10 }} />\n                                                </IconButton>\n                                                <Typography sx={{ fontWeight: 100 }}>\n                                                    {item.quantity}\n                                                </Typography>\n                                                <IconButton onClick={() => adjustQuantity(item._id, item.quantity + 1)}>\n                                                    <AddIcon sx={{ fontSize: 10 }} />\n                                                </IconButton>\n                                            </Box>\n\n\n                                        </Box>\n                                        {/* Remove Button */}\n                                        <Box sx={{}}>\n                                            <Button sx={{ fontSize: 12, color: '#0F75E0', textDecoration: 'underline' }} onClick={() => removeFromCart(item._id)}>Remove</Button>\n                                        </Box>\n                                    </Box>\n                                </Box>\n\n                            </Box>\n\n                        ))\n                    )}\n                </Box>\n                {cartItems.length > 0 && (\n                    <>\n                        {showScrollIcon && (\n                            <IconButton onClick={scrollToBottom} sx={{\n                                position: 'absolute', right: { xs: '20vw', sm: '8vw' }, bottom: step !== 0 ? 225 : { xs: 360, sm: 290 }, backgroundColor: 'rgba(255, 255, 255, 0.7)',\n                                backdropFilter: 'blur(4px)',\n                                borderRadius: '50%',\n                                border: '1px solid black'\n                            }}>\n                                <ArrowDownwardIcon />\n                            </IconButton>\n                        )}\n                        {/*<Divider style={{ margin: '10px 0' }} className='cartSummary-cost-divider' />*/}\n                        <Box className=\"cartSummary-cost\">\n                            <ListItem style={{ padding: '10px 0' }}>\n                                <ListItemText primary=\"Subtotal\" />\n                                <Typography variant=\"subtitle1\" style={{ fontWeight: 500 }}>\n                                    {formatCost(total)}\n                                </Typography>\n                            </ListItem>\n                            <ListItem style={{ padding: '10px 0' }}>\n                                <ListItemText primary=\"Shipping\" />\n                                <Typography variant=\"body2\">\n                                    {shippingCost === 0.00 ? 'Free!' : formatCost(shippingCost)}\n                                </Typography>\n                            </ListItem>\n\n                            <ListItem style={{ padding: '10px 0' }}>\n                                <ListItemText primary={\n                                    <Box component=\"span\" sx={{ display: 'flex', alignItems: 'center' }}>\n                                        Estimated Taxes\n                                        <Tooltip title=\"The final tax and total will be confirmed by email or text after you place your order.\" arrow>\n                                            <InfoOutlinedIcon sx={{ fontSize: 18, ml: 1, cursor: 'pointer' }} />\n                                        </Tooltip>\n                                    </Box>\n                                } />\n                                <Typography variant=\"body2\">{formatCost(tax)}</Typography>\n                            </ListItem>\n\n                            <ListItem style={{ padding: '10px 0' }}>\n                                <ListItemText primary=\"Total\" />\n                                <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\n                                    {formatCost(grandTotal)}\n\n                                </Typography>\n                            </ListItem>\n                        </Box>\n                        {step === 0 ?\n                            <Box className=\"cartSummary-checkout-button\">\n                                <Button onClick={next} variant=\"outlined\" sx={{ m: 1, width: { xs: '75%', sm: '45%', md: '40%' }, letterSpacing: 2, color: 'white', backgroundColor: '#283047', height: 56.5, \"&:hover\": { backgroundColor: '#FE6F49', border: 'none', }, textAlign: 'center' }}><span className='cartSummary-checkout-text'>Proceed  to </span> Checkout</Button>\n\n                                <Button component={Link} to='/shop' variant=\"outlined\" sx={{ m: 1, width: { xs: '75%', sm: '45%', md: '40%' }, letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, height: 55, '&:hover': { backgroundColor: '#0F75E0', color: 'white', } }}>Continue Shopping</Button>\n\n                            </Box> : null}\n                    </>\n                )}\n\n            </List>\n\n        </div>\n\n    );\n};\n\nexport default CartSummaryComponent;\n","import React from 'react';\nimport { PaymentForm, CreditCard, } from 'react-square-web-payments-sdk';\nimport ShippingDetailsComponent from './ShippingDetailsComponent';\nimport { Button, Typography } from '@mui/material';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport '../Styles/CheckoutPage.css'\nconst SquarePaymentForm = ({ onPaymentProcess, shippingDetails, back, errors, total }) => {\n\n\n    const applicationId = process.env.REACT_APP_SQUARE_APPLICATION_ID_SANDBOX;\n    const locationId = process.env.REACT_APP_SQUARE_LOCATION_ID_SANDBOX;\n\n\n    const handleTokenRecieved = (paymentToken) => {\n        // Call your onPaymentProcess function with the paymentToken\n        onPaymentProcess(paymentToken);\n    };\n\n\n    return (\n        <div className='checkout-paymentForm-container'>\n            <ShippingDetailsComponent\n                shippingDetails={shippingDetails}\n                back={back}\n\n            />\n            <Typography mt={8} variant='h6' >\n                Payment:  </Typography>\n            <Typography variant=\"body2\" fontWeight={100} className='checkout-paymentForm-SQUARE'>\n                <span className='square-text'> All transactions are processed secured and encrypted by</span>    <img src=\"https://images.ctfassets.net/2d5q1td6cyxq/58rgox9CjnDZYQSxSwikxb/d9cae0bf4d3f53900820eac00b049528/PD04488_-_black_logo_on_white.png?w=1502&h=768&fm=avif&q=85&fit=scale\" alt=\"square-logo\" className='checkout-paymentForm-logo' />\n            </Typography>\n            <Typography variant='body2' fontWeight={100} className='square-form-text'>Square© Payment Form</Typography>\n            <div className='checkout-payment-card-form'>\n                <Typography color='error' variant=\"body2\" fontWeight={100} className='checkout-paymentForm-SQUARE'>\n                    {errors}\n                </Typography>\n                <PaymentForm\n                    applicationId={applicationId}\n                    locationId={locationId}\n                    cardTokenizeResponseReceived={handleTokenRecieved}\n                >\n                    <Typography color={'primary'}>Will be Charged: ${total.grandTotal.toFixed(2)}</Typography>\n                    <CreditCard />\n                    {/* Google Pay button */}\n\n\n                </PaymentForm>\n\n            </div>\n            <Button onClick={back} variant=\"outlined\" sx={{ mt: 3, width: '100%', letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, height: 50, '&:hover': { backgroundColor: '#0F75E0', color: 'white', } }}>\n                <ArrowBackIosNewIcon sx={{ fontSize: 18, mr: 1 }} />\n                Return to shipping</Button>\n        </div>\n    );\n};\n\nexport default SquarePaymentForm;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Fade, Box, Typography, CircularProgress } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst modalStyle = { display: 'flex', alignItems: 'center', justifyContent: 'center' };\nconst divStyle = { display: 'flex', flexDirection: 'column', alignItems: 'center', backgroundColor: 'rgba(255, 255, 255, 0.8)', padding: '20px', borderRadius: '10px' };\nconst textStyle = { marginTop: '10px', fontSize: '16px' };\n\nfunction CircularProgressWithLabel(props) {\n    return (\n        <Box sx={{ position: 'relative', display: 'inline-flex' }}>\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                sx={{\n                    top: 0,\n                    left: 0,\n                    bottom: 0,\n                    right: 0,\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n            >\n                <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n                    {`${Math.round(props.value)}%`}\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n\nCircularProgressWithLabel.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\nconst LoadingModal = ({ open, message }) => {\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 1.5));\n        }, 100);\n\n        return () => {\n            clearInterval(timer);\n            if (!open) {\n                setProgress(0);\n            }\n        };\n    }, [open]);\n\n    return (\n        <Modal\n            open={open}\n            closeAfterTransition\n            style={modalStyle}\n        >\n            <Fade in={open} timeout={500}>\n                <div style={divStyle}>\n                    <CircularProgressWithLabel value={progress} />\n                    <span style={textStyle}>{message}</span>\n                </div>\n            </Fade>\n        </Modal>\n    );\n};\n\nLoadingModal.propTypes = {\n    open: PropTypes.bool.isRequired,\n    message: PropTypes.string.isRequired,\n};\n\nexport default LoadingModal;\n","import React, { useState, useEffect } from 'react';\nimport { Stepper, Step, StepLabel, Box, Snackbar, Alert, IconButton, CircularProgress, Modal, Button } from '@mui/material';\nimport InformationPage from '../components/InformationPage';\nimport ShippingComponent from '../components/ShippingComponent';\nimport CartSummaryComponent from '../components/CartSummaryComponent';\nimport { useCart } from '../components/CartContext';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport SquarePaymentForm from '../components/SquarePaymentForm';\nimport LoadingModal from '../components/Common/LoadingModal';\nimport { useAuth } from '../components/Utilities/useAuth';\nimport ShippingDetailsComponent from '../components/ShippingDetailsComponent';\nimport BrandIcon from '../assets/cbdtextwicon.webp'\nimport '../Styles/CheckoutPage.css'\n\nconst CheckoutPage = () => {\n    useEffect(() => {\n        document.title = \"Checkout - Complete Your Herba Naturals Purchase\";\n        document.querySelector('meta[name=\"description\"]').setAttribute(\"content\", \"Secure checkout process for your Herba Naturals purchases. Complete your order of premium CBD products quickly and safely.\");\n    }, []);\n\n\n    const [isSquareSdkLoaded, setIsSquareSdkLoaded] = useState(false);\n    const navigate = useNavigate();\n    const { step } = useParams();\n    const activeStep = parseInt(step) - 1;\n    const [shippingDetails, setShippingDetails] = useState({});\n    const steps = ['Cart', 'Information', 'Shipping', 'Payment'];\n    const { cart, removeFromCart, adjustQuantity, notes, clearCart } = useCart();\n    const [shippingCost, setShippingCost] = useState('Calculated at Next Step');\n    const total = cart.reduce((acc, item) => acc + item.product.price * item.quantity, 0);\n    const tax = \"Calculated at checkout\";\n    const [fullCost, setFullCost] = useState({});\n    const [shippingOptions, setShippingOptions] = useState({});\n    const [shipmentOptions, setShipmentOptions] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [orderData, setOrderData] = useState({})\n    const [estimatedShipping, setEstimatedShipping] = useState('')\n    const [lastAddress, setLastAddress] = useState({});\n    const { isLoggedIn } = useAuth();\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [paymentError, setPaymentError] = useState('')\n    const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n\n\n    const handleOpenSnackbar = () => {\n        setSnackbarOpen(true);\n    };\n\n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return; // Do not close if the user clicks away\n        }\n        setSnackbarOpen(false);\n    };\n\n    const handleBrandIconClick = () => {\n        setOpenConfirmDialog(true);\n    };\n    const handleConfirmNavigation = () => {\n        navigate('/'); // navigate to home\n    };\n\n    const handleCloseDialog = () => {\n        setOpenConfirmDialog(false);\n    };\n\n\n\n    const [formData, setFormData] = useState({\n        email: '',\n        firstName: '',\n        lastName: '',\n        address: '',\n        address2: '',\n        city: '',\n        state: '',\n        zip: '',\n        country: ''\n    });\n\n    const isGuestUser = () => {\n        const customerId = localStorage.getItem('customerId');\n        const isGuestFlag = localStorage.getItem('isGuest') === 'true';\n\n        return (customerId && customerId.startsWith('guest-')) || isGuestFlag;\n\n    };\n\n\n\n\n\n    const loadSquareSdk = () => {\n        setIsSquareSdkLoaded(false);\n\n        const script = document.createElement('script');\n        script.src = \"https://web.squarecdn.com/v1/square.js\"; // URL for production\n        script.type = \"text/javascript\";\n        script.async = false;\n        script.onload = () => setIsSquareSdkLoaded(true);\n        script.onerror = () => {\n            // Handle error loading the script\n            console.error('Failed to load Square SDK');\n            // Optionally, update the state to reflect the error\n        };\n        document.body.appendChild(script);\n    };\n\n    const cleanupSquareSdk = () => {\n        // Remove the Square SDK script from the DOM\n        const squareScript = document.querySelector('script[src=\"https://web.squarecdn.com/v1/square.js\"]');\n        if (squareScript) {\n            document.body.removeChild(squareScript);\n        }\n\n        // Reset any related state variables if necessary\n        setIsSquareSdkLoaded(false);\n\n        // Additional cleanup tasks if required\n\n    };\n\n    useEffect(() => {\n        if (activeStep === 3 && !isSquareSdkLoaded) {\n            loadSquareSdk();\n        } else if (activeStep !== 3) {\n            cleanupSquareSdk()\n        }\n        if (activeStep === 0 && isGuestUser()) {\n            handleOpenSnackbar();\n        }\n    }, [activeStep, isSquareSdkLoaded]);\n\n\n    const onPaymentProcess = (paymentToken) => {\n        finalizeOrderAndProcessPayment(paymentToken)\n    };\n\n\n\n    const finalizeOrderAndProcessPayment = async (paymentToken) => {\n        setIsLoading(true);\n        try {\n\n            // Convert amount to cents \n            const paymentAmount = Math.round(fullCost.grandTotal * 100);\n\n\n            // First, process the payment with Square\n            if (paymentToken) {\n\n                const trackingInfo = await createShippingLabelAsync(shippingDetails);\n                orderData.shippingMethod = {\n                    ...orderData.shippingMethod,\n                    carrier: trackingInfo.rate.provider,\n                    trackingNumber: trackingInfo.tracking_number,\n                    trackingUrl: trackingInfo.tracking_url_provider,\n                    labelUrl: trackingInfo.label_url,\n                    estimatedShipping: estimatedShipping\n                };\n\n                //MAKE PAYMENT\n                const paymentResult = await processPaymentAsync(paymentToken, paymentAmount, orderData)\n\n\n\n                // Check if payment was successful\n                if (paymentResult.success === true) {\n                    orderData.transactionId = paymentResult.response.result.payment.id;\n                    orderData.paymentStatus = 'Paid';\n\n\n                    if (isGuestUser()) {\n                        orderData.createdBy = localStorage.getItem('customerId'); // ID of the guest user\n                        orderData.createdByType = 'Guest';\n                    } else {\n                        orderData.createdBy = localStorage.getItem('customerId'); // ID of the registered user\n                        orderData.createdByType = 'Customer';\n                    }\n                    // Now, create the order in the database\n\n                    const createdOrder = await createOrderAsync(orderData);\n                    if (!isGuestUser()) {\n                        // Update customer data for registered users\n                        const updatedCustomerData = { orders: createdOrder._id };\n                        await updateCustomerDataAsync(localStorage.getItem('customerId'), updatedCustomerData);\n                    } else {\n                        // Update guest data for guest users\n                        const guestData = { orders: createdOrder._id };\n                        await updateGuestDataAsync(localStorage.getItem('customerId'), guestData);\n                        const isVerified = localStorage.getItem('isVerified')\n                        localStorage.clear();\n                        localStorage.setItem('isVerified', isVerified)\n                    }\n\n                    clearCart()\n                    // Navigate to success page after all processes are complete\n                    navigate('/success', { state: { paymentResult: paymentResult } });\n                } else {\n                    // Handle payment processing failure\n                    console.error('Payment processing failed:', paymentResult);\n\n\n                }\n            } else {\n\n                console.error('Missing payment token');\n            }\n        } catch (error) {\n            console.error('Error during finalizing order and payment:', error);\n        } finally {\n            setIsLoading(false); // Stop loading state after all processes are complete or an error occurs\n\n        }\n    };\n\n\n    useEffect(() => {\n        const customerId = localStorage.getItem('customerId');\n        const isGuest = isGuestUser();\n\n        if (!isLoggedIn && !isGuest) {\n            // Redirect to registration if not logged in and not a guest\n            navigate('/registration?returnUrl=/checkout/1');\n        } else if (!customerId && !isGuest) {\n            // Redirect to login if no customerId and not a guest\n            navigate('/login?returnUrl=/checkout/1');\n        } else {\n            // Proceed with checkout logic for logged-in or guest users\n        }\n    }, [isLoggedIn, navigate]);\n\n\n\n\n\n\n    const handleCheckout = async () => {\n        setIsLoading(true); // Turn on loading state\n        const customerId = localStorage.getItem('customerId')\n        const customerEmail = localStorage.getItem('userEmail')\n        setOrderData({\n            customer: customerId,\n            customerEmail: formData.email || customerEmail,\n            //customer phone \n            customerPhone: shippingDetails.phone,\n            products: cart.map(item => ({\n                name: item.product.name,\n                productId: item.product._id,\n                price: item.product.price,\n                quantity: item.quantity,\n                img: item.product.imgSource[0].url\n            })),\n            shippingMethod: {\n                provider: shippingOptions.provider,\n                carrierAccountId: shippingOptions.carrier_account,\n                serviceLevelToken: shippingOptions.servicelevel.token,\n                price: shippingOptions.amount,\n                amountCharged: shippingOptions.amount_local,\n                type: shippingOptions.servicelevel.name\n\n            },\n            totalAmount: fullCost,\n            orderNotes: notes,\n            address: `${shippingDetails.firstName} ${shippingDetails.lastName}, ${shippingDetails.address}, ${shippingDetails.address2 ? shippingDetails.address2 : ''}, ${shippingDetails.city}, ${shippingDetails.state}, ${shippingDetails.zip}, ${shippingDetails.country}`,\n            createdBy: localStorage.getItem('customerId'),\n        })\n        setIsLoading(false)\n        handleNext();\n    }\n\n\n    const processPaymentAsync = async (paymentToken, paymentAmount, orderData) => {\n        try {\n            const response = await fetch('http://localhost:8000/api/payment/process-payment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    sourceId: paymentToken.token, //'cnon:card-nonce-ok', // or sourceId: paymentToken.token,\n                    amount: paymentAmount,\n                    cost: fullCost, // Ensure 'fullCost' is defined in your context\n                    notes: notes, // Ensure 'notes' is defined in your context\n                    estimatedShipping: estimatedShipping, // Ensure 'estimatedShipping' is defined in your context\n                    orderDetails: orderData,\n                    last4: paymentToken.details.card.last4\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`Payment processing failed: HTTP ${response.status} - ${await response.text()}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error processing payment:', error);\n            setPaymentError('There was a problem processing your payment')\n            return null; // Return null in case of error\n        }\n    };\n\n\n\n\n\n\n    const createOrderAsync = async (orderData) => {\n        try {\n            const orderResponse = await fetch('http://localhost:8000/api/order/create', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify(orderData),\n            });\n\n            const createdOrder = await orderResponse.json();\n            if (!createdOrder || orderResponse.status !== 200) {\n                console.error('Error creating order:', createdOrder.message);\n\n                return null; // Return null if order creation fails\n            }\n            return createdOrder; // Return the created order\n        } catch (error) {\n            console.error('Error creating order asynchronously:', error);\n            return null; // Return null in case of error\n        }\n    };\n\n    const createShippingLabelAsync = async (shippingDetails) => {\n        try {\n            const backendUrl = 'http://localhost:8000/api/shippo/create';\n            const response = await fetch(backendUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ shippingDetails }),\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text(); // Or response.json() if the response is in JSON format\n                console.error(`HTTP Error: ${response.status} ${response.statusText}`, errorText);\n                throw new Error(`HTTP Error: ${response.status}`);\n            } else {\n                const result = await response.json();\n\n                return result\n\n            }\n        } catch (error) {\n            console.error('Error creating shipping label:', error);\n\n        }\n    };\n\n    const updateCustomerDataAsync = async (customerId, data) => {\n        try {\n            await fetch(`http://localhost:8000/api/customer/${customerId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify(data)\n            });\n            // Optionally handle the response or errors\n        } catch (error) {\n            console.error('Error updating customer data:', error);\n            // Handle errors or log them, as per your application's needs\n        }\n    }\n\n\n    const updateGuestDataAsync = async (customerId, data) => {\n        try {\n            await fetch(`http://localhost:8000/api/guest/${customerId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify(data)\n            });\n\n            // Optionally handle the response or errors\n        } catch (error) {\n\n            console.error('Error updating customer data:', error);\n            // Handle errors or log them, as per your application's needs\n        }\n    }\n\n\n\n\n\n\n\n\n    const handleFormChange = (name, value) => {\n        setFormData(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }));\n\n    }\n\n\n\n    const handleShippingCostChange = (cost) => {\n        setShippingCost(cost);\n    };\n\n    const handleShippingDetailsSubmit = (details) => {\n        setFormData(details);\n        setShippingDetails(details);\n    };\n\n    const handleShippingOptions = (options, info) => {\n        setShippingOptions(options, info);\n\n    };\n\n    useEffect(() => {\n        // If the URL step is not valid, redirect to the first step\n        if (isNaN(activeStep) || activeStep < 0 || activeStep >= steps.length) {\n            navigate('/checkout/1');\n        }\n    }, [activeStep, steps.length, navigate]);\n\n\n\n    const handleNext = () => {\n        navigate(`/checkout/${activeStep + 2}`); // Navigate to the next step\n    };\n\n    const handleBack = () => {\n        navigate(`/checkout/${activeStep}`); // Navigate to the previous step\n    };\n\n\n\n\n\n\n    const stepperStyles = {\n        position: { xs: 'fixed', sm: 'relative' }, // 'fixed' on xs screens, 'relative' otherwise\n        top: { xs: 0, sm: 'auto' }, // Stick to the top on xs screens\n        zIndex: { xs: 10000, sm: 'auto' }, // Ensure it's above other content\n        pt: { xs: 6, sm: 0 },\n        pb: { xs: 1, sm: 0 },\n        width: { xs: '100%' }, // Full width on xs screens\n        bgcolor: { xs: 'background.paper' }, // Add background color for visibility\n        borderBottom: { xs: '0.1px solid black', sm: 'none' },\n\n    };\n\n\n    const brandIconStyles = {\n        position: 'fixed', // 'fixed' on xs screens, 'relative' otherwise\n        top: -40,\n        left: 35,\n        textAlign: 'center',\n        zIndex: { xs: 10001, sm: 'auto' }, // Ensure it's above other content\n        pt: { xs: 3.5, sm: 0 },\n        pb: { xs: 1, sm: 0 },\n\n        display: { xs: 'block', sm: 'none' },\n        minWidth: '350px',\n        cursor: 'pointer',\n    };\n    const modalStyle = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 300, // Adjust the width as needed\n        bgcolor: 'background.paper',\n        boxShadow: 24,\n        p: 4,\n        borderRadius: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    };\n\n    const textStyle = {\n        marginBottom: '20px',\n        textAlign: 'center',\n\n    };\n\n    const buttonStyle = {\n        marginTop: '10px',\n        width: '80%', // Adjust the width as needed\n    };\n\n\n    return (\n        <div className='checkoutPage-container'>\n\n            <LoadingModal open={isLoading} message=\"Your payment is being processed, Please do not leave or refresh this page\" />\n            <Box sx={{ display: 'flex', flexDirection: { xs: 'column-reverse', md: 'row' } }}>\n                <div style={{ flex: 1 }}>\n\n                    <div>\n\n                        <div>\n                            <Box sx={brandIconStyles} className='brand-icon-checkout' onClick={handleBrandIconClick}>\n                                <img src={BrandIcon} alt=\"brand-con\" width={'80%'} height={'auto'} />\n                            </Box>\n\n                            <Stepper activeStep={activeStep} alternativeLabel sx={stepperStyles}>\n                                {steps.map((label) => (\n                                    <Step key={label}>\n\n                                        <StepLabel >{label}</StepLabel>\n                                    </Step>\n                                ))}\n                            </Stepper>\n                            <Box sx={{ mt: { xs: 5, sm: 0 } }}>\n                                {activeStep === 0 &&\n                                    <Box sx={{ pt: { xs: 0, sm: 2.5 }, borderTop: '0.1px solid black', mt: { xs: 0, sm: 1 } }}>\n                                        <CartSummaryComponent\n                                            cartItems={cart.map(item => ({\n                                                _id: item.product._id,\n                                                img: item.product.imgSource[0].url,\n                                                name: item.product.name,\n                                                quantity: item.quantity,\n                                                price: item.product.price,\n                                                specs: item.product.specs,\n                                            }))}\n                                            shippingCost={shippingCost}\n                                            tax={tax}\n                                            total={total}\n                                            removeFromCart={removeFromCart}\n                                            adjustQuantity={adjustQuantity}\n                                            next={handleNext}\n                                            step={activeStep}\n                                            setFullCost={setFullCost}\n\n                                        />\n                                    </Box>\n                                }\n                                {activeStep === 1 && <InformationPage\n                                    back={handleBack}\n                                    next={handleNext}\n                                    onShippingDetailsSubmit={handleShippingDetailsSubmit}\n                                    formData={formData}\n                                    onFormChange={handleFormChange}\n                                />}\n                                {activeStep === 2 && <ShippingComponent\n\n                                    handleBack\n                                    cartItems={cart.map(item => ({\n                                        _id: item.product._id,\n                                        weight: item.product.shipping.weight,\n                                        length: item.product.shipping.dimensions.length,\n                                        width: item.product.shipping.dimensions.width,\n                                        height: item.product.shipping.dimensions.height,\n                                        quantity: item.quantity,\n                                    }))}\n                                    shippingDetails={shippingDetails}\n                                    onShippingCostChange={handleShippingCostChange}\n                                    formData={formData}\n                                    back={handleBack}\n                                    next={handleNext}\n                                    onShippingOptionsChange={handleShippingOptions}\n                                    handleCheckout={handleCheckout}\n                                    isLoading={isLoading}\n                                    setEstimatedShipping={setEstimatedShipping}\n                                    lastAddress={lastAddress}\n                                    setLastAddress={setLastAddress}\n                                    shipmentOptions={shipmentOptions}\n                                    setShipmentOptions={setShipmentOptions}\n                                    fullCost={fullCost}\n                                    setShippingDetails={setShippingDetails}\n                                />}\n                                {activeStep === 3 && (\n                                    isSquareSdkLoaded ? (\n                                        <SquarePaymentForm\n                                            onPaymentProcess={onPaymentProcess}\n                                            paymentForm={window.SqPaymentForm}\n                                            shippingDetails={shippingDetails}\n                                            back={handleBack}\n                                            errors={paymentError}\n                                            total={fullCost}\n\n                                        />\n                                    ) : (\n                                        <div style={{ margin: '20px' }}>\n                                            <ShippingDetailsComponent\n                                                shippingDetails={shippingDetails}\n                                                back={handleBack}\n\n                                            />\n                                            <CircularProgress />\n                                        </div>\n                                    ))}\n                            </Box>\n                        </div>\n\n                    </div>\n\n                </div>\n                {/* if cart summary doesnt equal 0 then display it */}\n                {/* else dont display it */}\n                {/* Cart Summary Component */}\n                {activeStep !== 0 && cart.length !== 0 ?\n                    <div style={{ flex: 0.9, }}>\n                        {/* Cart Summary Component */}\n                        <CartSummaryComponent\n                            cartItems={cart.map(item => ({\n                                _id: item.product._id,\n                                img: item.product.imgSource[0].url,\n                                name: item.product.name,\n                                quantity: item.quantity,\n                                price: item.product.price,\n                                specs: item.product.specs,\n                            }))}\n                            shippingCost={shippingCost}\n                            tax={tax}\n                            total={total}\n                            removeFromCart={removeFromCart}\n                            adjustQuantity={adjustQuantity}\n                            setFullCost={setFullCost}\n                            handleCheckout={handleCheckout}\n                            step={activeStep}\n                        />\n                    </div>\n                    : null}\n            </Box>\n            ;\n            <Snackbar\n                open={snackbarOpen}\n                autoHideDuration={null}\n                onClose={handleCloseSnackbar}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            >\n                <Alert\n\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            onClick={handleCloseSnackbar}\n                        >\n                            {/* CLOSE ICON */}\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill='black' height=\"40\" width=\"40\"><path d=\"m10.458 31.458-1.916-1.916 9.5-9.542-9.5-9.542 1.916-1.916 9.542 9.5 9.542-9.5 1.916 1.916-9.5 9.542 9.5 9.542-1.916 1.916-9.542-9.5Z\" /></svg>\n                        </IconButton>\n                    }\n                >\n                    Checking out as guest.<br />   <Link to=\"/registration\" color=\"inherit\" underline=\"hover\">\n                        Create account?\n                    </Link>\n                </Alert>\n            </Snackbar>\n            <Modal open={openConfirmDialog} onClose={handleCloseDialog}>\n                <Box sx={modalStyle}>\n                    <p style={textStyle}>Are you sure you want to leave the checkout process? Your progress may* be lost.</p>\n                    <Button color='error' style={buttonStyle} onClick={handleConfirmNavigation}>Yes, leave</Button>\n                    <Button style={buttonStyle} onClick={handleCloseDialog}>No, stay</Button>\n                </Box>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CheckoutPage;\n"],"names":["_ref","id","label","fullWidth","variant","onAddressSelected","value","setValue","error","helperText","color","focused","onBlur","sx","autocompleteInput","useRef","_useState","useState","window","google","_useState2","_slicedToArray","isApiLoaded","setIsApiLoaded","useEffect","initAutocomplete","autocomplete","maps","places","Autocomplete","current","types","addListener","place","getPlace","document","querySelector","script","createElement","src","concat","process","async","defer","head","appendChild","loadScript","getElementById","removeChild","_jsx","TextField","inputRef","InputProps","endAdornment","InputAdornment","position","children","Tooltip","title","IconButton","mr","height","fill","viewBox","xmlns","d","CircularProgress","size","thickness","onChange","e","target","autoComplete","next","back","onShippingDetailsSubmit","formData","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","email","setEmail","_useState7","_useState8","phone","setPhone","_useState9","_useState10","address","setAddress","_useState11","_useState12","address2","setAddress2","_useState13","_useState14","city","setCity","_useState15","_useState16","state","setState","_useState17","_useState18","zip","setZip","_useState19","_useState20","country","setCountry","_useState21","_useState22","formSubmitted","setFormSubmitted","isLoggedIn","useAuth","storedFirstName","localStorage","getItem","storedLastName","storedEmail","storedPhone","storedAddress","storedAddress2","storedCity","storedState","storedZip","storedCountry","isGuestUser","customerId","isGuestFlag","startsWith","token","userId","jwtDecode","fetchCustomerData","fetch","credentials","then","response","ok","Error","json","data","catch","console","_useState23","_useState24","errors","setErrors","validateField","fieldName","errorMsg","test","prevErrors","_objectSpread","_defineProperty","handleSubmit","event","preventDefault","isEmailValid","isFirstNameValid","isLastNameValid","isAddressValid","isCityValid","isStateValid","isZipValid","isCountryValid","details","submitFormData","doesFormDataMatchLocalStorage","every","key","charAt","toUpperCase","slice","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","responseData","idToStore","errorData","dataToSend","_errorData","wrap","_context","prev","headers","body","JSON","stringify","sent","_id","setItem","Object","keys","forEach","message","abrupt","_objectWithoutProperties","_excluded","log","t0","stop","_x","apply","arguments","textFieldStyles","fontSize","border","onSubmit","className","_jsxs","FormControl","Typography","fontWeight","pb","mb","type","required","name","disabled","formattedPhoneNumber","phoneNumber","replace","phoneNumberLength","length","formatPhoneNumber","my","Grid","container","spacing","item","xs","sm","AddressAutocomplete","streetNumber","route","address_components","component","componentType","long_name","short_name","streetAddress","style","transform","Button","onClick","m","letterSpacing","backgroundColor","borderColor","borderWidth","ArrowBackIosNewIcon","display","textAlign","shippingDetails","buttonStyle","textDecoration","cartItems","onShippingCostChange","isLoading","onShippingOptionsChange","handleCheckout","setEstimatedShipping","lastAddress","setLastAddress","shipmentOptions","setShipmentOptions","fullCost","setShippingDetails","shippingOptions","setShippingOptions","loading","setLoading","currentPage","setCurrentPage","buttonDisabled","setButtonDisabled","isShippingOptionSelected","setIsShippingOptionSelected","checkoutError","setCheckoutError","totalWeight","maxLength","maxWidth","maxHeight","defaultDimensions","itemLength","itemWidth","width","itemHeight","itemWeight","weight","quantity","Math","max","calculateShippingDate","estimatedDays","undefined","isNaN","currentDate","Date","shippingDate","addDays","format","calculateShipping","shipmentDetails","errorText","result","sortedRates","addressTo","street1","street2","parcel","toString","distance_unit","mass_unit","text","status","statusText","rates","sort","a","b","parseFloat","amount","subTotal","map","rate","amount_local","isFree","finish","Array","indexOfLastItem","indexOfFirstItem","currentItems","Box","ShippingDetailsComponent","flexDirection","justifyContent","alignItems","List","margin","option","index","ListItem","ListItemText","primary","servicelevel","secondary","estimated_days","ListItemAvatar","provider_image_75","alt","marginRight","minWidth","ml","cost","formattedShipping","updatedDisabledState","idx","handleSelectShippingOption","marginTop","marginLeft","md","_Fragment","shippingCost","total","removeFromCart","adjustQuantity","step","setFullCost","formatCost","toFixed","tax","validShippingCost","Number","grandTotal","boxRef","showScrollIcon","setShowScrollIcon","checkOverflow","isOverflowing","scrollHeight","clientHeight","addEventListener","removeEventListener","disablePadding","ref","minHeight","overflow","mt","borderBottom","gutterBottom","align","fontVariant","to","Link","borderRadius","mx","Badge","badgeContent","img","fontFamily","fontVariantCaps","lineHeight","specs","price","RemoveIcon","AddIcon","scrollTop","right","bottom","backdropFilter","ArrowDownwardIcon","padding","arrow","InfoOutlinedIcon","cursor","onPaymentProcess","PaymentForm","applicationId","locationId","cardTokenizeResponseReceived","paymentToken","CreditCard","modalStyle","divStyle","textStyle","CircularProgressWithLabel","props","top","left","round","open","progress","setProgress","timer","setInterval","prevProgress","clearInterval","Modal","closeAfterTransition","Fade","in","timeout","setAttribute","isSquareSdkLoaded","setIsSquareSdkLoaded","navigate","useNavigate","useParams","activeStep","parseInt","steps","_useCart","useCart","cart","notes","clearCart","setShippingCost","reduce","acc","product","setIsLoading","orderData","setOrderData","estimatedShipping","snackbarOpen","setSnackbarOpen","paymentError","setPaymentError","_useState25","_useState26","openConfirmDialog","setOpenConfirmDialog","handleCloseSnackbar","reason","handleCloseDialog","_useState27","_useState28","setFormData","squareScript","cleanupSquareSdk","onload","onerror","loadSquareSdk","finalizeOrderAndProcessPayment","paymentAmount","trackingInfo","paymentResult","createdOrder","updatedCustomerData","guestData","isVerified","createShippingLabelAsync","shippingMethod","carrier","provider","trackingNumber","tracking_number","trackingUrl","tracking_url_provider","labelUrl","label_url","processPaymentAsync","success","transactionId","payment","paymentStatus","createdBy","createdByType","createOrderAsync","orders","updateCustomerDataAsync","updateGuestDataAsync","clear","isGuest","_callee2","customerEmail","_context2","customer","customerPhone","products","productId","imgSource","carrierAccountId","carrier_account","serviceLevelToken","amountCharged","totalAmount","orderNotes","handleNext","_ref3","_callee3","_context3","sourceId","orderDetails","last4","card","t1","t2","t3","call","t4","_x2","_x3","_x4","_ref4","_callee4","orderResponse","_context4","_x5","_ref5","_callee5","_context5","_x6","_ref6","_callee6","_context6","_x7","_x8","_ref7","_callee7","_context7","_x9","_x10","handleBack","LoadingModal","flex","zIndex","pt","BrandIcon","Stepper","alternativeLabel","bgcolor","Step","StepLabel","borderTop","CartSummaryComponent","InformationPage","onFormChange","prevFormData","ShippingComponent","shipping","dimensions","options","info","SquarePaymentForm","paymentForm","SqPaymentForm","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","action","underline","boxShadow","p","marginBottom"],"sourceRoot":""}