{"version":3,"file":"static/js/433.7453098b.chunk.js","mappings":"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","sources":["components/Utilities/useThrottle.js","components/QuickView.jsx"],"sourcesContent":["import { useCallback, useRef } from 'react';\n\nconst useThrottle = (callback, delay) => {\n    const lastCall = useRef(null);\n    const timeout = useRef(null);\n\n    const throttledFunction = useCallback((...args) => {\n        const now = Date.now();\n        if (lastCall.current && now < lastCall.current + delay) {\n            clearTimeout(timeout.current);\n            timeout.current = setTimeout(() => {\n                lastCall.current = now;\n                callback(...args);\n            }, delay + lastCall.current - now);\n        } else {\n            lastCall.current = now;\n            callback(...args);\n        }\n    }, [callback, delay]);\n\n    return throttledFunction;\n};\n\nexport default useThrottle;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Box, Typography, Button, Grid, Tabs, Tab, Select, MenuItem, InputLabel, CircularProgress, FormControl, IconButton, } from '@mui/material';\nimport { useCart } from './CartContext';\nimport '../Styles/QuickView.css'\nimport useThrottle from './Utilities/useThrottle';\n\nconst customFont = \"freight-display-pro, serif\";\nconst modalStyle = {\n    fontFamily: customFont,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: { xs: '90%', sm: '600px', md: '800px' }, // Responsive width\n    maxHeight: { xs: '70vh', sm: '90vh' }, // Adjust height for mobile\n    overflowY: 'auto',\n    bgcolor: 'background.paper',\n    boxShadow: '2px -2px 23px 0',\n    border: '5px solid #ccc',\n\n    p: 4,\n    borderRadius: 2\n};\n\n\n\n\nconst QuickView = ({ productId, open, handleClose, products }) => {\n    const [productDetails, setProductDetails] = useState(null);\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [selectedImage, setSelectedImage] = useState('');\n    const [quantity, setQuantity] = useState(1); // State for the selected quantity\n    const [flavor, setFlavor] = useState(''); // State for the selected flavor\n    const [loading, setLoading] = useState(false);\n    const { addToCart, cart } = useCart();\n    const [relatedProducts, setRelatedProducts] = useState([]);\n\n\n    useEffect(() => {\n        if (productDetails) {\n            document.title = productDetails.seo.title || productDetails.name; // Use SEO title if available, else product name\n        }\n    }, [productDetails]);\n\n    useEffect(() => {\n        if (productDetails) {\n            const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n            if (metaKeywords) {\n                metaKeywords.content = productDetails.seoKeywords.join(', ') || 'default, keywords';\n            }\n        }\n    }, [productDetails]);\n\n    useEffect(() => {\n        if (!open) {\n            setProductDetails(null);\n            setSelectedImage('');\n            document.title = 'Shop at HerbaNatural - Explore Koi, Beezbee, Wyld Products and More';\n            const metaDescription = document.querySelector('meta[name=\"description\"]');\n            const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n            if (metaDescription) {\n                metaDescription.content = \"Browse Herba Natural's online store for the finest CBD products. Featuring brands like Koi, Beezbee, and Wyld with a variety of CBD oils, edibles, and topicals.\";\n            }\n            if (metaKeywords) {\n                metaKeywords.content = 'default, keywords';\n            }\n        }\n    }, [open]);\n\n\n\n    useEffect(() => {\n        // If the modal is closed, clear the product details\n        if (!open) {\n            setProductDetails(null);\n            setSelectedImage('');\n            return;\n        }\n\n        // Find the product details from the products array when the productId changes and the modal is open\n        if (productId) {\n            const foundProduct = products.find(product => product._id === productId);\n            if (foundProduct) {\n                setProductDetails(foundProduct);\n                if (foundProduct.imgSource.length > 0) {\n                    setSelectedImage(foundProduct.imgSource[0].url);\n                }\n            } else {\n                console.error('Product not found');\n            }\n        }\n    }, [productId, open, products]);\n\n\n\n\n    useEffect(() => {\n        if (productDetails) {\n            const firstFlavor = productDetails.flavor.split(',')[0].trim();\n\n            // Set the first flavor as the default selection\n            setFlavor(firstFlavor);\n            const related = products.filter(product =>\n                product._id !== productDetails._id && // This ensures the current product is not included\n                product.category.some(category =>\n                    productDetails.category.includes(category)\n                )\n            ).slice(0, 3); // Only take the first 3 related products\n\n            setRelatedProducts(related);\n        }\n    }, [productDetails, products]);\n\n\n\n    useEffect(() => {\n        // When productDetails is updated and has an imgSource, set the selected image\n        if (productDetails && productDetails.imgSource.length > 0) {\n            setSelectedImage(productDetails.imgSource[0].url);\n        }\n    }, [productDetails]); // Now it listens for changes in productDetails\n\n\n\n    const handleChangeTab = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n\n    const handleThumbnailClick = (imageUrl) => {\n        setSelectedImage(imageUrl); // Update the main image displayed\n    };\n\n    //HOVER ZOOM \n    const [showLens, setShowLens] = useState(false);\n    const [lensPosition, setLensPosition] = useState({ x: 0, y: 0 });\n    const [lensSize] = useState({ width: 200, height: 200 }); // You can adjust this size\n    const [zoomFactor] = useState(2);\n\n\n    const handleMouseMove = (e) => {\n\n        const target = e.target;\n        const targetRect = target.getBoundingClientRect();\n        const x = e.pageX - targetRect.left - window.scrollX + 50;\n        const y = e.pageY - targetRect.top - window.scrollY + 45;\n\n        setLensPosition({\n            x: x - lensSize.width / 2,\n            y: y - lensSize.height / 2,\n        });\n    };\n\n    const handleMouseMoveThrottled = useThrottle(handleMouseMove, 50); // 50 ms throttle time\n\n\n\n    const renderContent = () => {\n        if (loading) {\n            return (\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n                    <CircularProgress />\n                </Box>\n            );\n        } else if (productDetails) {\n            // Return the complex JSX for when productDetails are present\n            return (\n                <Grid container spacing={2} style={{ minWidth: '280px', }}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={5} md={6}>\n\n                            <Box className='quickview-img-container' sx={{ display: 'flex', flexDirection: { xs: 'row', sm: 'column' }, }}>\n                                {/* Thumbnails */}\n                                <Box>\n                                    <Box sx={{ display: 'flex', ml: { sm: 3, md: 0 }, }}>\n                                        {productDetails.imgSource.map((image, i) => (\n                                            <Box\n                                                key={'thumbnail:' + i}\n                                                className='quickview-thumbnail-container'\n                                                sx={{\n                                                    visibility: {\n                                                        xs: i < 3 ? 'visible' : 'hidden', // Show the first 3 on extra-small screens\n                                                        sm: 'visible', // Show on small screens and above\n                                                    },\n                                                }}\n                                            >\n                                                <img\n                                                    key={'image'}\n\n                                                    className='quickview-thumbnail'\n                                                    src={`${image.url}`}\n                                                    alt={`${productDetails.name} thumbnail ${i}`}\n                                                    onClick={() => handleThumbnailClick(image.url)}\n\n                                                />\n                                            </Box>\n                                        ))}\n                                    </Box>\n\n\n\n                                    {/* Main Image displayed */}\n                                    <Box\n                                        className=\"image-container\"\n                                        onMouseEnter={() => setShowLens(true)}\n                                        onMouseMove={handleMouseMoveThrottled}\n                                        onMouseLeave={() => setShowLens(false)}\n                                        display={'flex'}\n                                        justifyContent={'center'}\n\n                                    >\n                                        <img\n                                            className='quickview-main-image'\n                                            src={selectedImage}\n                                            alt={productDetails.name}\n                                            key={productDetails.name}\n\n\n                                        />\n                                    </Box>\n                                </Box>\n\n                                <Typography sx={{ display: { xs: \"none\", sm: 'block' } }} className='zoom-box-title'>Zoom Box</Typography>\n                                <Box className='zoom-box' sx={{ display: { xs: \"none\", sm: 'block' } }} >\n\n                                    {showLens && (\n\n                                        <Box\n                                            className=\"zoom-lens\"\n                                            style={{\n                                                position: 'relative',\n\n                                                width: `${lensSize.width}px`,\n                                                height: `${lensSize.height}px`,\n                                                overflow: 'hidden',\n                                                border: '1px solid black',\n                                            }}\n                                        >\n                                            <img\n                                                src={selectedImage}\n                                                alt={productDetails.name}\n\n                                                style={{\n                                                    position: 'absolute',\n\n                                                    width: `${300 * zoomFactor}px`,\n                                                    height: `${300 * zoomFactor}px`,\n                                                    left: `-${lensPosition.x * zoomFactor}px`, // Update based on mouse move\n                                                    top: `-${lensPosition.y * zoomFactor}px`, // Update based on mouse move\n                                                    pointerEvents: 'none',\n                                                }}\n                                            />\n                                        </Box>\n\n                                    )}\n                                </Box>\n\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} sm={7} md={6}>\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <div style={{ marginRight: '-30px' }}>\n                                    <Typography sx={{ width: '100%', fontSize: { xs: 18, sm: 22 }, ml: { xs: 5, sm: 3, md: 0 }, fontFamily: customFont, fontWeight: 600 }} variant=\"h6\" className='quickview-title'>{productDetails.name}</Typography>\n                                </div>\n                                <IconButton sx={{ p: { sm: 2, md: 2 }, m: 2 }} className='quickview-close-button' onClick={handleClose}>\n\n                                    <svg height='45' width='45' fill='#282F48' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\">\n                                        <path fill='#282F48' d=\"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" />\n                                        <path fill=\"white\" d=\"M184 840h656V184H184v656zm163.9-473.9A7.95 7.95 0 0 1 354 353h58.9c4.7 0 9.2 2.1 12.3 5.7L512 462.2l86.8-103.5c3-3.6 7.5-5.7 12.3-5.7H670c6.8 0 10.5 7.9 6.1 13.1L553.8 512l122.3 145.9c4.4 5.2.7 13.1-6.1 13.1h-58.9c-4.7 0-9.2-2.1-12.3-5.7L512 561.8l-86.8 103.5c-3 3.6-7.5 5.7-12.3 5.7H354c-6.8 0-10.5-7.9-6.1-13.1L470.2 512 347.9 366.1z\" />\n                                        <path fill='#282F48' d=\"M354 671h58.9c4.8 0 9.3-2.1 12.3-5.7L512 561.8l86.8 103.5c3.1 3.6 7.6 5.7 12.3 5.7H670c6.8 0 10.5-7.9 6.1-13.1L553.8 512l122.3-145.9c4.4-5.2.7-13.1-6.1-13.1h-58.9c-4.8 0-9.3 2.1-12.3 5.7L512 462.2l-86.8-103.5c-3.1-3.6-7.6-5.7-12.3-5.7H354c-6.8 0-10.5 7.9-6.1 13.1L470.2 512 347.9 657.9A7.95 7.95 0 0 0 354 671z\" />\n                                    </svg>\n                                </IconButton>\n                            </Box>\n\n                            <Box sx={{ borderBottom: 1, borderColor: 'divider', mr: { sx: 0, sm: 6, md: 15.01 } }}>\n                                <Tabs sx={{ ml: { xs: 5, sm: 3, md: 0 } }} value={selectedTab} onChange={handleChangeTab} aria-label=\"Product details tabs\" >\n                                    <Tab tabIndex={0} type='button' label=\"Details\" />\n                                    <Tab tabIndex={1} type='button' label=\"Related\" />\n                                    <Tab tabIndex={3} type='button' label=\"Specs\" />\n                                </Tabs>\n                            </Box>\n                            {/* Content for each tab */}\n                            <Box height='320px' sx={{\n\n                            }}>\n                                < TabPanel value={selectedTab} index={0} >\n\n                                    <Box sx={{ overflow: 'auto', height: '200px', border: .1, p: 2, boxShadow: ' 1px 4px 6px -1px rgba(0, 0, 0, 0.2);' }}>\n\n                                        <span className='quickview-description'>{productDetails.description}</span>\n                                    </Box>\n                                </TabPanel>\n                                <TabPanel value={selectedTab} index={1}>\n                                    {relatedProducts.map((product) => (\n                                        <Box onClick={() => setProductDetails(product)} className='quickview-related-container' key={product._id}> {/* Use `_id` or appropriate key property */}\n                                            <img className='quickview-related-img' alt='related' src={`${product.imgSource[0].url}`} />\n                                            <Box variant='button'>\n\n                                                <Box className='quickview-related-name'>{product.name}</Box>\n\n                                            </Box>\n\n                                        </Box>\n                                    ))}\n                                </TabPanel>\n                                <TabPanel value={selectedTab} index={2}>{productDetails.specs}</TabPanel>\n\n\n\n\n                            </Box>\n                            <Box className='quickview-price'>\n                                Price: ${productDetails.price}\n\n                            </Box>\n                            {/* Quantity Selector */}\n                            <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'start', flexDirection: { xs: 'column', sm: 'row' } }}>\n                                <FormControl sx={{ ml: 3, mb: 1, mr: 4 }}  >\n                                    <InputLabel name=\"quantity-label\" id=\"quantity-label\">Qty</InputLabel>\n                                    <Select\n                                        labelId=\"quantity-label\"\n                                        id=\"quantity-select\"\n                                        name=\"quantity-select\"\n                                        sx={{ width: '100px', borderRadius: 0 }}\n                                        value={quantity}\n                                        onChange={(e) => setQuantity(Number(e.target.value))}\n                                        label=\"Qty\"\n                                        defaultValue={1}\n                                    >\n                                        {[...Array(10).keys()].map((x) => (\n                                            <MenuItem key={x + 1} value={x + 1}>\n                                                {x + 1}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                                {/*Flavor Selector */}\n                                <FormControl sx={{ width: '280px', ml: { xs: 3, sm: 0 } }}>\n                                    <InputLabel id=\"flavor-label\" name=\"flavor-label\"  >Flavor</InputLabel>\n                                    <Select\n                                        labelId=\"flavor-label\"\n                                        id=\"flavor-select\"\n                                        name='flavor-select'\n                                        sx={{ borderRadius: 0 }}\n                                        value={flavor}\n\n                                        onChange={(e) => setFlavor(e.target.value)}\n                                        label=\"Flavor\"\n\n                                    >\n                                        {productDetails.flavor.split(',').map((flavorOption, index) => (\n                                            <MenuItem key={index} value={flavorOption.trim()}>\n                                                {flavorOption.trim()}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Box>\n                            <Box>\n                                <Button variant=\"outlined\" className='shop-button-cart' sx={{ ml: 3, border: 1, borderRadius: 0, height: 55, letterSpacing: 2, fontSize: 12, color: 'white', backgroundColor: '#283047', borderColor: '#283047', borderWidth: 1.5, transition: 'all 0.3s', '&:hover': { backgroundColor: '#FE6F49', color: 'white', borderColor: '#FE6F49', transform: 'scale(1.05)' } }} onClick={() => addToCart(productDetails, quantity)}>\n                                    Add to Cart\n                                </Button>\n\n                            </Box>\n                        </Grid>\n                    </Grid >\n\n\n                </Grid >\n            );\n        }\n        return null; // Or some fallback component\n    };\n\n\n\n\n    return (\n        <Modal open={open} onClose={handleClose}>\n            <Box className=\"quickview-container\" sx={modalStyle}>\n                {renderContent()}\n            </Box>\n        </Modal >\n    );\n};\n\n// TabPanel component\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <div>{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nexport default QuickView;"],"names":["useThrottle","callback","delay","lastCall","useRef","timeout","useCallback","_len","arguments","length","args","Array","_key","now","Date","current","clearTimeout","setTimeout","customFont","modalStyle","fontFamily","position","top","left","transform","width","xs","sm","md","maxHeight","overflowY","bgcolor","boxShadow","border","p","borderRadius","TabPanel","props","children","value","index","other","_jsx","role","hidden","id","concat","Box","sx","_ref","productId","open","handleClose","products","productDetails","setProductDetails","useState","selectedTab","setSelectedTab","selectedImage","setSelectedImage","quantity","setQuantity","flavor","setFlavor","loading","setLoading","addToCart","cart","useCart","relatedProducts","setRelatedProducts","useEffect","document","title","seo","name","metaKeywords","querySelector","content","seoKeywords","join","metaDescription","foundProduct","find","product","_id","imgSource","url","console","error","firstFlavor","split","trim","related","filter","category","some","includes","slice","handleChangeTab","event","newValue","showLens","setShowLens","lensPosition","setLensPosition","x","y","lensSize","height","zoomFactor","handleMouseMoveThrottled","e","targetRect","target","getBoundingClientRect","pageX","window","scrollX","pageY","scrollY","Modal","onClose","className","display","justifyContent","alignItems","CircularProgress","Grid","container","spacing","style","minWidth","_jsxs","item","flexDirection","ml","map","image","i","visibility","src","alt","onClick","handleThumbnailClick","imageUrl","onMouseEnter","onMouseMove","onMouseLeave","Typography","overflow","pointerEvents","marginRight","fontSize","fontWeight","variant","IconButton","m","fill","xmlns","viewBox","d","borderBottom","borderColor","mr","Tabs","onChange","Tab","tabIndex","type","label","description","specs","price","mb","FormControl","InputLabel","Select","labelId","Number","defaultValue","keys","MenuItem","flavorOption","Button","letterSpacing","color","backgroundColor","borderWidth","transition"],"sourceRoot":""}