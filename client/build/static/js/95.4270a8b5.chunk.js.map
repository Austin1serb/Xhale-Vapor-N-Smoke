{"version":3,"file":"static/js/95.4270a8b5.chunk.js","mappings":"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","sources":["components/Utilities/useThrottle.js","components/QuickView.jsx"],"sourcesContent":["import { useCallback, useRef } from 'react';\n\nconst useThrottle = (callback, delay) => {\n    const lastCall = useRef(null);\n    const timeout = useRef(null);\n\n    const throttledFunction = useCallback((...args) => {\n        const now = Date.now();\n        if (lastCall.current && now < lastCall.current + delay) {\n            clearTimeout(timeout.current);\n            timeout.current = setTimeout(() => {\n                lastCall.current = now;\n                callback(...args);\n            }, delay + lastCall.current - now);\n        } else {\n            lastCall.current = now;\n            callback(...args);\n        }\n    }, [callback, delay]);\n\n    return throttledFunction;\n};\n\nexport default useThrottle;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Box, Typography, Button, Grid, Tabs, Tab, Select, MenuItem, InputLabel, CircularProgress, FormControl, IconButton, } from '@mui/material';\nimport { useCart } from './CartContext';\nimport '../Styles/QuickView.css'\nimport useThrottle from './Utilities/useThrottle';\n\nconst customFont = \"freight-display-pro, serif\";\nconst modalStyle = {\n    fontFamily: customFont,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: { xs: '90%', sm: '600px', md: '800px' }, // Responsive width\n    maxHeight: '90vh', // Adjust height for mobile\n    overflowY: 'auto',\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: 1\n};\n\n\n\n\nconst QuickView = ({ productId, open, handleClose, products }) => {\n    const [productDetails, setProductDetails] = useState(null);\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [selectedImage, setSelectedImage] = useState('');\n    const [quantity, setQuantity] = useState(1); // State for the selected quantity\n    const [flavor, setFlavor] = useState(''); // State for the selected flavor\n    const [loading, setLoading] = useState(false);\n    const { addToCart } = useCart();\n    const [relatedProducts, setRelatedProducts] = useState([]);\n\n\n    useEffect(() => {\n        if (productDetails) {\n            document.title = productDetails.seo.title || productDetails.name; // Use SEO title if available, else product name\n        }\n    }, [productDetails]);\n    useEffect(() => {\n        if (productDetails) {\n            const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n            if (metaKeywords) {\n                metaKeywords.content = productDetails.seoKeywords.join(', ') || 'default, keywords';\n            }\n        }\n    }, [productDetails]);\n    useEffect(() => {\n        if (!open) {\n            setProductDetails(null);\n            setSelectedImage('');\n            document.title = 'Shop at Herba Naturals - Explore Koi, Beezbee, Wyld Products and More';\n            const metaDescription = document.querySelector('meta[name=\"description\"]');\n            const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n            if (metaDescription) {\n                metaDescription.content = \"Browse Herba Natural's online store for the finest CBD products. Featuring brands like Koi, Beezbee, and Wyld with a variety of CBD oils, edibles, and topicals.\";\n            }\n            if (metaKeywords) {\n                metaKeywords.content = 'default, keywords';\n            }\n        }\n    }, [open]);\n\n\n\n    useEffect(() => {\n        // If the modal is closed, clear the product details\n        if (!open) {\n            setProductDetails(null);\n            setSelectedImage('');\n            return;\n        }\n\n        // Find the product details from the products array when the productId changes and the modal is open\n        if (productId) {\n            const foundProduct = products.find(product => product._id === productId);\n            if (foundProduct) {\n                setProductDetails(foundProduct);\n                if (foundProduct.imgSource.length > 0) {\n                    setSelectedImage(foundProduct.imgSource[0].url);\n                }\n            } else {\n                console.error('Product not found');\n            }\n        }\n    }, [productId, open, products]);\n\n\n\n\n    useEffect(() => {\n        if (productDetails) {\n            const related = products.filter(product =>\n                product._id !== productDetails._id && // This ensures the current product is not included\n                product.category.some(category =>\n                    productDetails.category.includes(category)\n                )\n            ).slice(0, 3); // Only take the first 3 related products\n\n            setRelatedProducts(related);\n        }\n    }, [productDetails, products]);\n\n\n\n    useEffect(() => {\n        // When productDetails is updated and has an imgSource, set the selected image\n        if (productDetails && productDetails.imgSource.length > 0) {\n            setSelectedImage(productDetails.imgSource[0].url);\n        }\n    }, [productDetails]); // Now it listens for changes in productDetails\n\n\n\n    const handleChangeTab = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n\n    const handleThumbnailClick = (imageUrl) => {\n        setSelectedImage(imageUrl); // Update the main image displayed\n    };\n\n    //HOVER ZOOM \n    const [showLens, setShowLens] = useState(false);\n    const [lensPosition, setLensPosition] = useState({ x: 0, y: 0 });\n    const [lensSize] = useState({ width: 200, height: 200 }); // You can adjust this size\n    const [zoomFactor] = useState(2);\n\n\n    const handleMouseMove = (e) => {\n\n        const target = e.target;\n        const targetRect = target.getBoundingClientRect();\n        const x = e.pageX - targetRect.left - window.scrollX + 50;\n        const y = e.pageY - targetRect.top - window.scrollY + 45;\n\n        setLensPosition({\n            x: x - lensSize.width / 2,\n            y: y - lensSize.height / 2,\n        });\n    };\n\n    const handleMouseMoveThrottled = useThrottle(handleMouseMove, 50); // 50 ms throttle time\n\n\n\n    const renderContent = () => {\n        if (loading) {\n            return (\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n                    <CircularProgress />\n                </Box>\n            );\n        } else if (productDetails) {\n            // Return the complex JSX for when productDetails are present\n            return (\n                <Grid container spacing={2} style={{ minWidth: '280px', }}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={5} md={6}>\n\n                            <Box className='quickview-img-container' sx={{ display: 'flex', flexDirection: { xs: 'row', sm: 'column' }, }}>\n                                {/* Thumbnails */}\n                                <Box>\n                                    <Box sx={{ display: 'flex', ml: { sm: 3, md: 0 }, }}>\n                                        {productDetails.imgSource.map((image, i) => (\n                                            <Box\n                                                key={'thumbnail:' + i}\n                                                className='quickview-thumbnail-container'\n                                                sx={{\n                                                    visibility: {\n                                                        xs: i < 3 ? 'visible' : 'hidden', // Show the first 3 on extra-small screens\n                                                        sm: 'visible', // Show on small screens and above\n                                                    },\n                                                }}\n                                            >\n                                                <img\n                                                    key={'image'}\n\n                                                    className='quickview-thumbnail'\n                                                    src={`${image.url.split('/upload/').join('/upload/c_fill,h_75,w_75/f_auto,q_auto:eco/')}`}\n                                                    alt={`${productDetails.name} thumbnail ${i}`}\n                                                    onClick={() => handleThumbnailClick(image.url)}\n\n                                                />\n                                            </Box>\n                                        ))}\n                                    </Box>\n\n\n\n                                    {/* Main Image displayed */}\n                                    <Box\n                                        className=\"image-container\"\n                                        onMouseEnter={() => setShowLens(true)}\n                                        onMouseMove={handleMouseMoveThrottled}\n                                        onMouseLeave={() => setShowLens(false)}\n                                        display={'flex'}\n                                        justifyContent={'center'}\n\n                                    >\n                                        <img\n                                            className='quickview-main-image'\n                                            src={selectedImage}\n                                            alt={productDetails.name}\n                                            key={productDetails.name}\n\n\n                                        />\n                                    </Box>\n                                </Box>\n\n                                <Typography sx={{ display: { xs: \"none\", sm: 'block' } }} className='zoom-box-title'>Zoom Box</Typography>\n                                <Box className='zoom-box' sx={{ display: { xs: \"none\", sm: 'block' } }} >\n\n                                    {showLens && (\n\n                                        <Box\n                                            className=\"zoom-lens\"\n                                            style={{\n                                                position: 'relative',\n\n                                                width: `${lensSize.width}px`,\n                                                height: `${lensSize.height}px`,\n                                                overflow: 'hidden',\n                                                border: '1px solid black',\n                                            }}\n                                        >\n                                            <img\n                                                src={selectedImage}\n                                                alt={productDetails.name}\n\n                                                style={{\n                                                    position: 'absolute',\n\n                                                    width: `${300 * zoomFactor}px`,\n                                                    height: `${300 * zoomFactor}px`,\n                                                    left: `-${lensPosition.x * zoomFactor}px`, // Update based on mouse move\n                                                    top: `-${lensPosition.y * zoomFactor}px`, // Update based on mouse move\n                                                    pointerEvents: 'none',\n                                                }}\n                                            />\n                                        </Box>\n\n                                    )}\n                                </Box>\n\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} sm={7} md={6}>\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <div style={{ marginRight: '-30px' }}>\n                                    <Typography sx={{ width: '100%', fontSize: { xs: 18, sm: 22 }, ml: { xs: 5, sm: 3, md: 0 }, fontFamily: customFont, fontWeight: 600 }} variant=\"h6\" className='quickview-title'>{productDetails.name}</Typography>\n                                </div>\n                                <IconButton className='quickview-close-button' onClick={handleClose}>\n\n                                    <svg height='45' width='45' fill='#282F48' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\">\n                                        <path fill='#282F48' d=\"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" />\n                                        <path fill=\"white\" d=\"M184 840h656V184H184v656zm163.9-473.9A7.95 7.95 0 0 1 354 353h58.9c4.7 0 9.2 2.1 12.3 5.7L512 462.2l86.8-103.5c3-3.6 7.5-5.7 12.3-5.7H670c6.8 0 10.5 7.9 6.1 13.1L553.8 512l122.3 145.9c4.4 5.2.7 13.1-6.1 13.1h-58.9c-4.7 0-9.2-2.1-12.3-5.7L512 561.8l-86.8 103.5c-3 3.6-7.5 5.7-12.3 5.7H354c-6.8 0-10.5-7.9-6.1-13.1L470.2 512 347.9 366.1z\" />\n                                        <path fill='#282F48' d=\"M354 671h58.9c4.8 0 9.3-2.1 12.3-5.7L512 561.8l86.8 103.5c3.1 3.6 7.6 5.7 12.3 5.7H670c6.8 0 10.5-7.9 6.1-13.1L553.8 512l122.3-145.9c4.4-5.2.7-13.1-6.1-13.1h-58.9c-4.8 0-9.3 2.1-12.3 5.7L512 462.2l-86.8-103.5c-3.1-3.6-7.6-5.7-12.3-5.7H354c-6.8 0-10.5 7.9-6.1 13.1L470.2 512 347.9 657.9A7.95 7.95 0 0 0 354 671z\" />\n                                    </svg>\n                                </IconButton>\n                            </Box>\n\n                            <Box sx={{ borderBottom: 1, borderColor: 'divider', mr: { sx: 0, sm: 6, md: 15.01 } }}>\n                                <Tabs sx={{ ml: { xs: 5, sm: 3, md: 0 } }} value={selectedTab} onChange={handleChangeTab} aria-label=\"Product details tabs\" >\n                                    <Tab tabIndex={0} type='button' label=\"Details\" />\n                                    <Tab tabIndex={1} type='button' label=\"Related\" />\n                                    <Tab tabIndex={3} type='button' label=\"Specs\" />\n                                </Tabs>\n                            </Box>\n                            {/* Content for each tab */}\n                            <Box height='320px' sx={{\n\n                            }}>\n                                < TabPanel value={selectedTab} index={0} >\n\n                                    <Box sx={{ overflow: 'auto', height: '200px', border: .1, p: 2, boxShadow: ' 1px 4px 6px -1px rgba(0, 0, 0, 0.2);' }}>\n\n                                        <span className='quickview-description'>{productDetails.description}</span>\n                                    </Box>\n                                </TabPanel>\n                                <TabPanel value={selectedTab} index={1}>\n                                    {relatedProducts.map((product) => (\n                                        <Box onClick={() => setProductDetails(product)} className='quickview-related-container' key={product._id}> {/* Use `_id` or appropriate key property */}\n                                            <img className='quickview-related-img' alt='related' src={`${product.imgSource[0].url.split('/upload/').join('/upload/c_fill,h_50,w_50/f_auto,q_auto:eco/')}`} />\n                                            <Box variant='button'>\n\n                                                <Box className='quickview-related-name'>{product.name}</Box>\n\n                                            </Box>\n\n                                        </Box>\n                                    ))}\n                                </TabPanel>\n                                <TabPanel value={selectedTab} index={2}>{productDetails.specs}</TabPanel>\n\n\n\n\n                            </Box>\n                            <Box className='quickview-price'>\n                                Price: ${productDetails.price}\n                            </Box>\n                            {/* Quantity Selector */}\n                            <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'start', flexDirection: { xs: 'column', sm: 'row' } }}>\n                                <FormControl sx={{ ml: 3, mb: 1, mr: 4 }}  >\n                                    <InputLabel name=\"quantity-label\" id=\"quantity-label\">Qty</InputLabel>\n                                    <Select\n                                        labelId=\"quantity-label\"\n                                        id=\"quantity-select\"\n                                        name=\"quantity-select\"\n                                        sx={{ width: '100px', borderRadius: 0 }}\n                                        value={quantity}\n                                        onChange={(e) => setQuantity(Number(e.target.value))}\n                                        label=\"Qty\"\n                                        defaultValue={1}\n                                    >\n                                        {[...Array(10).keys()].map((x) => (\n                                            <MenuItem key={x + 1} value={x + 1}>\n                                                {x + 1}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                                {/*Flavor Selector */}\n                                <FormControl sx={{ width: '280px', ml: { xs: 3, sm: 0 } }}>\n                                    <InputLabel id=\"flavor-label\" name=\"flavor-label\"  >Flavor</InputLabel>\n                                    <Select\n                                        labelId=\"flavor-label\"\n                                        id=\"flavor-select\"\n                                        name='flavor-select'\n                                        sx={{ borderRadius: 0 }}\n                                        value={flavor ? productDetails.flavor : flavor}\n                                        onChange={(e) => setFlavor(e.target.value)}\n                                        label=\"Flavor\"\n\n                                    >\n                                        {productDetails.flavor.split(',').map((flavorOption, index) => (\n                                            <MenuItem key={index} value={flavorOption.trim()}>\n                                                {flavorOption.trim()}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Box>\n                            <Box>\n                                <Button variant=\"outlined\" className='shop-button-cart' sx={{ ml: 3, border: 1, borderRadius: 0, height: 55, letterSpacing: 2, fontSize: 12, color: 'white', backgroundColor: '#283047', borderColor: '#283047', borderWidth: 1.5, transition: 'all 0.3s', '&:hover': { backgroundColor: '#FE6F49', color: 'white', borderColor: '#FE6F49', transform: 'scale(1.05)' } }} onClick={() => addToCart(productDetails, quantity)}>\n                                    Add to Cart\n                                </Button>\n\n                            </Box>\n                        </Grid>\n                    </Grid >\n\n\n                </Grid >\n            );\n        }\n        return null; // Or some fallback component\n    };\n\n\n\n\n    return (\n        <Modal open={open} onClose={handleClose}>\n            <Box className=\"quickview-container\" sx={modalStyle}>\n                {renderContent()}\n            </Box>\n        </Modal >\n    );\n};\n\n// TabPanel component\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <div>{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nexport default QuickView;"],"names":["callback","delay","lastCall","useRef","timeout","throttledFunction","useCallback","_len","arguments","length","args","Array","_key","now","Date","current","clearTimeout","setTimeout","apply","customFont","modalStyle","fontFamily","position","top","left","transform","width","xs","sm","md","maxHeight","overflowY","bgcolor","boxShadow","p","borderRadius","TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","hidden","id","concat","Box","sx","_ref","productId","open","handleClose","products","_useState","useState","_useState2","_slicedToArray","productDetails","setProductDetails","_useState3","_useState4","selectedTab","setSelectedTab","_useState5","_useState6","selectedImage","setSelectedImage","_useState7","_useState8","quantity","setQuantity","_useState9","_useState10","flavor","setFlavor","_useState11","_useState12","loading","addToCart","useCart","_useState13","_useState14","relatedProducts","setRelatedProducts","useEffect","document","title","seo","name","metaKeywords","querySelector","content","seoKeywords","join","metaDescription","foundProduct","find","product","_id","imgSource","url","console","error","related","filter","category","some","includes","slice","handleChangeTab","event","newValue","_useState15","_useState16","showLens","setShowLens","_useState17","x","y","_useState18","lensPosition","setLensPosition","_useState19","height","lensSize","_useState21","zoomFactor","handleMouseMoveThrottled","useThrottle","e","targetRect","target","getBoundingClientRect","pageX","window","scrollX","pageY","scrollY","Modal","onClose","className","display","justifyContent","alignItems","CircularProgress","Grid","container","spacing","style","minWidth","_jsxs","item","flexDirection","ml","map","image","i","visibility","src","split","alt","onClick","imageUrl","onMouseEnter","onMouseMove","onMouseLeave","Typography","overflow","border","pointerEvents","marginRight","fontSize","fontWeight","variant","IconButton","fill","xmlns","viewBox","d","borderBottom","borderColor","mr","Tabs","onChange","Tab","tabIndex","type","label","description","specs","price","mb","FormControl","InputLabel","Select","labelId","Number","defaultValue","_toConsumableArray","keys","MenuItem","flavorOption","trim","Button","letterSpacing","color","backgroundColor","borderWidth","transition"],"sourceRoot":""}