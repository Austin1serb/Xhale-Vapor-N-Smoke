{"version":3,"file":"static/js/768.89a38c83.chunk.js","mappings":"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","sources":["components/AddressAutocomplete.jsx","components/InformationPage.jsx","components/ShippingDetailsComponent.jsx","components/ShippingComponent.jsx","components/CartSummaryComponent.jsx","components/SquarePaymentForm.jsx","components/Common/LoadingModal.jsx","pages/CheckoutPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { TextField, InputAdornment, Tooltip, IconButton, CircularProgress } from '@mui/material';\n\nconst AddressAutocomplete = ({ id, label, fullWidth, variant, onAddressSelected, value, setValue, error, helperText, color, focused, onBlur, sx }) => {\n    const autocompleteInput = useRef(null);\n    const [isApiLoaded, setIsApiLoaded] = useState(!!window.google);\n    const API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n    useEffect(() => {\n        // Function to initialize the Autocomplete\n        const initAutocomplete = () => {\n            const autocomplete = new window.google.maps.places.Autocomplete(\n                autocompleteInput.current,\n                { types: ['address'] }\n            );\n\n            autocomplete.addListener('place_changed', () => {\n                const place = autocomplete.getPlace();\n                onAddressSelected(place); // Pass the place object to the parent component\n            });\n\n            setIsApiLoaded(true);\n        };\n        window.initAutocomplete = initAutocomplete\n        // Function to load the Google Maps API script\n        const loadScript = () => {\n            if (!document.querySelector('script[src*=\"googleapis\"]')) {\n                const script = document.createElement('script');\n                script.src = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&libraries=places&callback=initAutocomplete`;\n                script.async = true;\n                script.defer = true;\n                document.head.appendChild(script);\n            }\n        };\n\n\n        // Load script if Google Maps API is not already loaded\n        if (!window.google) {\n            loadScript();\n        } else {\n            initAutocomplete();\n        }\n        return () => {\n            // Remove the script tag\n            const script = document.getElementById('google-maps-script');\n            if (script) {\n                document.head.removeChild(script);\n            }\n\n            // Clean up the global function if it was added\n            if (window.initAutocomplete) {\n                delete window.initAutocomplete;\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onAddressSelected]);\n\n    return (\n        <TextField\n            inputRef={autocompleteInput}\n            id={id}\n            label={label}\n            fullWidth={fullWidth}\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n\n                        {isApiLoaded ? <Tooltip title=\"Google Places will help you validate your address\">\n                            <IconButton sx={{ mr: -1 }}>\n                                {/* magnify icon */}\n                                <svg height='20' fill='#0f75e0' viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z\" /></svg>\n                            </IconButton>\n                        </Tooltip> : <CircularProgress size={20} thickness={4} color=\"primary\" />}\n                    </InputAdornment>\n                ),\n            }}\n            variant={variant}\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            helperText={helperText}\n            error={error}\n            color={color}\n            focused={focused}\n            onBlur={onBlur}\n            autoComplete='address'\n            sx={sx}\n        />\n\n    );\n};\n\n\nexport default AddressAutocomplete;","import React, { useEffect, useState } from 'react';\nimport { TextField, Button, Grid, Typography, FormControl, InputAdornment, Tooltip, IconButton } from '@mui/material';\nimport AddressAutocomplete from './AddressAutocomplete';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { jwtDecode } from 'jwt-decode';\nimport { useAuth } from './Utilities/useAuth';\nimport '../Styles/CheckoutPage.css'\nconst InformationComponent = ({ next, back, onShippingDetailsSubmit, formData }) => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [address, setAddress] = useState('');\n    const [address2, setAddress2] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zip, setZip] = useState('');\n    const [country, setCountry] = useState('');\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const { isLoggedIn } = useAuth();\n    const storedFirstName = localStorage.getItem('userFirstName');\n    const storedLastName = localStorage.getItem('userLastName');\n    const storedEmail = localStorage.getItem('userEmail');\n    const storedPhone = localStorage.getItem('userPhone');\n    const storedAddress = localStorage.getItem('userAddress');\n    const storedAddress2 = localStorage.getItem('userAddress2');\n    const storedCity = localStorage.getItem('userCity');\n    const storedState = localStorage.getItem('userState');\n    const storedZip = localStorage.getItem('userZip');\n    const storedCountry = localStorage.getItem('userCountry');\n\n\n\n    const isGuestUser = () => {\n        const customerId = localStorage.getItem('customerId');\n        const isGuestFlag = localStorage.getItem('isGuest') === 'true';\n\n        return (customerId && customerId.startsWith('guest-')) || isGuestFlag;\n\n    };\n\n    //useEffect to fetch customer data on page mount\n    useEffect(() => {\n        if (isGuestUser()) {\n\n        } else {\n            const token = localStorage.getItem('token');\n            const decodedToken = jwtDecode(token);\n            const userId = decodedToken.customerId;\n            fetchCustomerData(userId);\n        }\n\n    }, []);\n\n    const scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n    // Scroll to the top when the component mounts\n    useEffect(() => {\n        scrollToTop();\n    }, []);\n    const fetchCustomerData = (userId) => {\n\n        fetch(`http://localhost:8000/api/customer/${userId}`, {\n            credentials: 'include'\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setPhone(data.phone);\n                setAddress(data.address);\n                setAddress2(data.address2);\n                setCity(data.city);\n                setState(data.state);\n                setZip(data.zip);\n                setCountry(data.country);\n            })\n            .catch((error) => {\n                console.error('Error fetching customer data:', error);\n            });\n    };\n\n\n    useEffect(() => {\n\n        if (!formSubmitted) {\n            // Update local state with formData values\n            setFirstName(formData.firstName || storedFirstName || '');\n            setLastName(formData.lastName || storedLastName || '');\n            setEmail(formData.email || storedEmail || '');\n            setPhone(formData.phone || storedPhone || '');\n            setAddress(formData.address || storedAddress || '');\n            setAddress2(formData.address2 || storedAddress2 || '');\n            setCity(formData.city || storedCity || '');\n            setState(formData.state || storedState || '');\n            setZip(formData.zip || storedZip || '');\n            setCountry(formData.country || storedCountry || '');\n        }\n\n\n    }, [formData, formSubmitted, storedAddress, storedAddress2, storedCity, storedCountry, storedEmail, storedFirstName, storedLastName, storedPhone, storedState, storedZip]);\n\n    const [errors, setErrors] = useState({\n        email: '',\n        firstName: '',\n        lastName: '',\n        phone: '',\n        address: '',\n        city: '',\n        state: '',\n        zip: '',\n        country: ''\n    });\n\n\n\n\n    const validateField = (fieldName, value) => {\n        let errorMsg = '';\n        switch (fieldName) {\n            case 'email':\n                if (!value) {\n                    errorMsg = \"Email is required\";\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\n                    errorMsg = \"Invalid email address\";\n                }\n                break;\n            case 'firstName':\n                errorMsg = !value ? \"First name is required\" : '';\n                break;\n            case 'lastName':\n                errorMsg = !value ? \"Last name is required\" : '';\n                break;\n            case 'address':\n                errorMsg = !value ? \"Address is required\" : '';\n                break;\n            case 'city':\n                errorMsg = !value ? \"City is required\" : '';\n                break;\n            case 'state':\n                errorMsg = !value ? \"State is required\" : '';\n                break;\n            case 'zip':\n                errorMsg = !value ? \"Zip code is required\" : !/^\\d{5}(-\\d{4})?$/.test(value) ? \"Invalid zip code\" : '';\n                break;\n            case 'country':\n                errorMsg = !value ? \"Country is required\" : '';\n                break;\n            default:\n                break;\n        }\n        setErrors(prevErrors => ({ ...prevErrors, [fieldName]: errorMsg }));\n        return !errorMsg;\n    };\n\n\n\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        // Validate each field and check if the form is valid\n        const isEmailValid = validateField('email', email);\n        const isFirstNameValid = validateField('firstName', firstName);\n        const isLastNameValid = validateField('lastName', lastName);\n        const isAddressValid = validateField('address', address);\n        const isCityValid = validateField('city', city);\n        const isStateValid = validateField('state', state);\n        const isZipValid = validateField('zip', zip);\n        const isCountryValid = validateField('country', country);\n\n        const isFormValid = isEmailValid && isFirstNameValid && isLastNameValid && isAddressValid && isCityValid && isStateValid && isZipValid && isCountryValid;\n\n        if (!isFormValid) {\n            return; // Stop submission if any validation fails\n        }\n\n        // Proceed with form submission if all validations pass\n        const details = {\n\n            email,\n            firstName,\n            lastName,\n            phone,\n            address,\n            address2,\n            city,\n            state,\n            zip,\n            country\n        };\n\n        onShippingDetailsSubmit(details);\n        setFormSubmitted(true)\n        submitFormData(details);\n\n        next(); // Proceed to the next step\n    };\n\n    const doesFormDataMatchLocalStorage = (formData) => {\n        const keys = ['firstName', 'lastName', 'email', 'phone', 'address', 'address2', 'city', 'state', 'zip', 'country'];\n        return keys.every(key => formData[key] === localStorage.getItem('user' + key.charAt(0).toUpperCase() + key.slice(1)));\n    };\n\n\n    const submitFormData = async (data) => {\n        try {\n            let response;\n\n            if (isGuestUser()) {\n                const customerId = localStorage.getItem('customerId');\n\n                // New guest user or guest user with updated information\n                if (!customerId || customerId.startsWith('guest-') || !doesFormDataMatchLocalStorage(data)) {\n                    const url = customerId && !customerId.startsWith('guest-')\n                        ? `http://localhost:8000/api/guest/${customerId}` // URL for updating existing guest\n                        : `http://localhost:8000/api/guest`; // URL for creating new guest\n\n                    const method = customerId && !customerId.startsWith('guest-') ? 'PUT' : 'POST';\n\n                    // Send a POST (for new guest) or PUT (for existing guest) request\n                    response = await fetch(url, {\n                        method: method,\n                        credentials: 'include',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify(data)\n                    });\n\n                    if (response.ok) {\n                        const responseData = await response.json();\n                        const idToStore = method === 'POST' ? responseData._id : customerId;\n                        localStorage.setItem('customerId', idToStore);\n                        localStorage.setItem('isGuest', 'true');\n                        Object.keys(data).forEach(key => {\n                            localStorage.setItem('user' + key.charAt(0).toUpperCase() + key.slice(1), data[key]);\n                        });\n                    } else {\n                        const errorData = await response.json();\n                        console.error(\"Failed to submit form data:\", errorData.message);\n                        return;\n                    }\n                }\n            } else {\n                const { email, firstName, lastName, ...dataToSend } = data;\n                response = await fetch(`http://localhost:8000/api/customer/${localStorage.getItem('customerId')}`, {\n                    method: 'PUT', // Use POST for creating or PUT for updating\n\n                    headers: {\n                        'Content-Type': 'application/json',\n                        // Include authentication token if required\n\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify(dataToSend)\n                });\n\n            }\n            if (response && !response.ok) {\n                const errorData = await response.json();\n                console.error(\"Failed to submit form data:\", errorData.message);\n            } else if (response && response.ok) {\n                console.log(\"Form data submitted successfully\");\n            }\n\n        } catch (error) {\n            console.error(\"Error submitting form data:\", error);\n        }\n    };\n\n    const handleAddressChange = (place) => {\n        let streetNumber = '';\n        let route = '';\n        setAddress('');\n        setAddress2('');\n        setCity('');\n        setState('');\n        setZip('');\n        setCountry('');\n\n        place.address_components.forEach(component => {\n            const componentType = component.types[0];\n            if (componentType === 'street_number') {\n                streetNumber = component.long_name;\n            } else if (componentType === 'route') {\n                route = component.long_name;\n            }\n            switch (componentType) {\n                case \"street_number\":\n                    streetNumber = component.long_name;\n                    break;\n                case \"route\":\n                    route = component.long_name;\n                    break;\n                case \"locality\":\n                    setCity(component.long_name);\n                    break;\n                case \"administrative_area_level_1\":\n                    setState(component.short_name);\n                    break;\n                case \"postal_code\":\n                    setZip(component.long_name);\n                    break;\n                case \"country\":\n                    setCountry(component.long_name);\n                    break;\n                default:\n                    // Unknown component type\n                    break;\n            }\n\n\n        });\n\n        // Combine street number and route to form the street address\n        const streetAddress = streetNumber && route ? `${streetNumber} ${route}` : route;\n        setAddress(streetAddress); // Set only the street address for the \"Address line 1\" field\n    };\n\n\n    const formatPhoneNumber = (value) => {\n        if (!value) return value;\n\n        const phoneNumber = value.replace(/[^\\d]/g, '');\n        const phoneNumberLength = phoneNumber.length;\n\n        if (phoneNumberLength < 4) return phoneNumber;\n\n        if (phoneNumberLength < 7) {\n            return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n        }\n\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n    };\n    const handlePhoneChange = (e) => {\n        const formattedPhoneNumber = formatPhoneNumber(e.target.value);\n        setPhone(formattedPhoneNumber);\n    };\n\n\n\n\n\n    const textFieldStyles = {\n\n        '& .MuiInputBase-input': {\n            fontSize: '14px' // Adjust the font size as needed\n        },\n        '& .MuiInputLabel-root': {\n            fontSize: '14px' // Adjust the font size as needed\n        },\n        border: '0,1px solid black'\n\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit} className='information-form-container'>\n            <FormControl>\n                <Typography fontWeight={600} fontSize={16} pb={2} mb={1} variant=\"h6\" className='information-titles' >\n                    Contact\n                </Typography>\n                <TextField\n\n                    type='email'\n                    required\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    value={email || ''}\n                    onChange={(e) => setEmail(e.target.value)}\n                    helperText={errors.email || ' '}\n                    error={!!errors.email}\n                    color={email && !errors.email ? 'success' : 'primary'}\n                    focused={!!email}\n                    autoComplete=\"email\"\n                    variant=\"outlined\"\n                    onBlur={() => validateField('email', email)}\n                    sx={textFieldStyles}\n                    disabled={!!isLoggedIn && !!email}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\" >\n                                {isLoggedIn && email ? ( // Check if the field is disabled\n                                    <Tooltip title=\"To Change Your Email Please Go To The Account Page By Clicking the Account Icon On The Top Right Of The Page\">\n                                        <IconButton sx={{ mr: -1, }}>\n                                            <svg fill='#0f75e0' height='20' viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z\" /></svg>\n                                        </IconButton>\n                                    </Tooltip>\n                                ) : null}\n                            </InputAdornment>\n                        ),\n                    }}\n                >\n\n                    Email</TextField>\n                <TextField\n                    required\n                    type='tel'\n                    id=\"phone\"\n                    name=\"phone\"\n                    label=\"phone (optional)\"\n                    value={phone || ''}\n                    onChange={handlePhoneChange}\n                    color={phone && !errors.phone ? 'success' : 'primary'}\n                    focused={!!phone}\n                    autoComplete=\"phone\"\n                    variant=\"outlined\"\n                    sx={textFieldStyles}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\" >\n                                <Tooltip title=\"Incase we need to contact you about your order\">\n                                    <IconButton sx={{ mr: -1, }}>\n                                        <svg fill='#0f75e0' height='20' viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z\" /></svg>\n                                    </IconButton>\n                                </Tooltip>\n                            </InputAdornment>\n                        ),\n                    }}\n\n                >Phone</TextField>\n                <Typography fontWeight={600} fontSize={16} pb={2} my={1} variant=\"h6\" className='information-titles'  >\n                    Shipping Information\n                </Typography>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} sm={6} >\n                        <TextField\n                            fullWidth\n                            required\n                            type='text'\n                            id=\"firstName\"\n                            name=\"firstName\"\n                            label=\"First Name\"\n                            value={firstName || ''}\n                            onChange={(e) => setFirstName(e.target.value)}\n                            error={!!errors.firstName}\n                            helperText={errors.firstName || ' '}\n                            autoComplete=\"given-name\"\n                            variant=\"outlined\"\n                            color={firstName && !errors.firstName ? 'success' : 'primary'}\n                            onBlur={() => validateField('firstName', firstName)}\n                            focused={!!firstName}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            autoComplete=\"family-name\"\n                            value={lastName || ''}\n                            onChange={e => { setLastName(e.target.value); }}\n                            error={!!errors.lastName}\n                            helperText={errors.lastName || ' '}\n                            color={lastName && !errors.lastName ? 'success' : 'primary'}\n                            id=\"lastName\"\n                            name=\"lastName\"\n                            label=\"Last Name\"\n                            fullWidth\n                            variant=\"outlined\"\n                            onBlur={() => validateField('lastName', lastName)}\n                            focused={!!lastName}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <AddressAutocomplete\n\n                            id=\"address\"\n                            label=\"Address line 1*\"\n                            fullWidth\n                            error={!!errors.address}\n                            helperText={errors.address || ' '}\n                            color={address && !errors.address ? 'success' : 'primary'}\n                            onAddressSelected={handleAddressChange}\n                            value={address || ''}\n                            setValue={setAddress}\n                            focused={!!address}\n                            onBlur={() => validateField('address', address)}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n\n                        <TextField\n                            helperText={<span>\n                                {/* information icon */}\n                                <svg height='16' style={{ transform: 'translateY(3px)' }} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM11 7H13V9H11V7ZM11 11H13V17H11V11Z\" /></svg>\n                                {' Add a Building /Appartment number if you have one'}\n                            </span>}\n                            id=\"address2\"\n                            name=\"address2\"\n                            label=\"Address line 2 (optional)\"\n                            fullWidth\n                            autoComplete=\"shipping address-line2\"\n                            variant=\"outlined\"\n                            onChange={e => setAddress2(e.target.value)}\n                            value={address2 || ''}\n                            sx={textFieldStyles}\n                            focused={!!address2}\n                            color={address2 ? 'success' : 'primary'}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n\n                        <TextField\n                            value={city || ''}\n                            onChange={e => { setCity(e.target.value); }}\n                            onBlur={() => validateField('city', city)}\n                            error={!!errors.city}\n                            helperText={errors.city || ' '}\n                            color={city && !errors.city ? 'success' : 'primary'}\n                            required\n                            id=\"city\"\n                            name=\"city\"\n                            label=\"City\"\n                            fullWidth\n                            autoComplete=\"shipping address-level2\"\n                            variant=\"outlined\"\n                            focused={!!city}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            value={state || ''}\n                            onChange={e => { setState(e.target.value); }}\n                            error={!!errors.state}\n                            helperText={errors.state || ' '}\n                            color={state && !errors.state ? 'success' : 'primary'}\n                            required\n                            id=\"state\"\n                            name=\"state\"\n                            label=\"State\"\n                            fullWidth\n                            autoComplete=\"administrative_area_level_1\"\n                            variant=\"outlined\"\n                            onBlur={() => validateField('state', state)}\n                            focused={!!state}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <TextField\n                            value={zip || ''}\n                            onChange={e => { setZip(e.target.value); }}\n                            error={!!errors.zip}\n                            helperText={errors.zip || ' '}\n                            color={zip && !errors.zip ? 'success' : 'primary'}\n                            required\n                            id=\"zip\"\n                            name=\"zip\"\n                            label=\"ZIP code\"\n                            fullWidth\n                            autoComplete=\"postal_code\"\n                            variant=\"outlined\"\n                            onBlur={() => validateField('zip', zip)}\n                            focused={!!zip}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <TextField\n                            value={country || ''}\n                            onChange={e => {\n                                setCountry(e.target.value);\n\n                            }}\n                            error={!!errors.country}\n                            helperText={errors.country || ' '}\n                            color={country && !errors.country ? 'success' : 'primary'}\n                            required\n                            id=\"country\"\n                            name=\"country\"\n                            label=\"Country/Region\"\n                            fullWidth\n                            autoComplete=\"country\"\n                            variant=\"outlined\"\n                            onBlur={() => validateField('country', country)}\n                            focused={!!country}\n                            sx={textFieldStyles}\n                        />\n                    </Grid>\n                    <Grid item xs={12} className='information-buttons'>\n\n                        <Button onClick={back} variant=\"outlined\" sx={{ height: 55, m: 1, letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, '&:hover': { backgroundColor: '#0F75E0', color: 'white', } }}>\n                            <ArrowBackIosNewIcon sx={{ fontSize: 18, mr: 1, display: { xs: 'none', sm: 'block' } }} />\n                            Back to cart</Button>\n\n\n\n                        <Button onClick={handleSubmit} variant=\"outlined\" sx={{ letterSpacing: 2, color: 'white', backgroundColor: '#283047', \"&:hover\": { backgroundColor: '#FE6F49', border: '1px solid #FE6F49 ', }, textAlign: 'center', height: 55 }} ><span className='cartSummary-checkout-text'>Proceed</span>  to Shipping</Button>\n                    </Grid>\n                </Grid>\n            </FormControl>\n        </form >\n    );\n};\n\nexport default InformationComponent;","import { Button, Typography } from '@mui/material';\nimport React from 'react'\n\nconst ShippingDetailsComponent = ({ shippingDetails, back }) => {\n    const buttonStyle = { textDecoration: 'underline', fontSize: 12 }\n\n    return (\n        <div className='checkout-shipping'>\n            {/* Contact Information */}\n            <Typography variant='h6' >Contact:</Typography>\n            <div className='checkout-shipping-contact'>\n                <Typography variant=\"subtitle1\"> Contact:</Typography>\n                <div className='checkout-shipping-change'>\n                    <Typography variant=\"body2\" fontWeight={100}>{shippingDetails.phone}</Typography>\n                    <Typography variant=\"body2\" fontWeight={100}>{shippingDetails.email}</Typography>\n                    <Button onClick={back} style={buttonStyle}>Change</Button>\n                </div>\n            </div>\n\n            {/* Shipping Address */}\n            <div className='checkout-shipping-address'>\n                <Typography variant=\"subtitle1\">Ship to:</Typography>\n                <div className=\"checkout-shipping-change\">\n                    <Typography fontWeight={100} variant=\"body2\">{shippingDetails.firstName + ' ' + shippingDetails.lastName}</Typography>\n                    <Typography fontWeight={100} variant=\"body2\">\n                        {`${shippingDetails.address} ${shippingDetails.address2}, ${shippingDetails.city}, ${shippingDetails.state} ${shippingDetails.zip}, ${shippingDetails.country}`}\n                    </Typography>\n                    <Button onClick={back} style={buttonStyle}>Change</Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ShippingDetailsComponent","import React, { useState, useEffect } from 'react';\nimport { Typography, Grid, List, ListItem, ListItemText, Button, CircularProgress, Box, ListItemAvatar } from '@mui/material';\nimport '../Styles/CheckoutPage.css'\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport { format, addDays } from 'date-fns';\nimport ShippingDetailsComponent from './ShippingDetailsComponent';\nconst ShippingComponent = ({ cartItems, shippingDetails, onShippingCostChange, back, isLoading, onShippingOptionsChange, handleCheckout, setEstimatedShipping, lastAddress, setLastAddress, shipmentOptions, setShipmentOptions, fullCost, setShippingDetails }) => {\n\n\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [loading, setLoading] = useState(false);\n    //const [shippingCost, setShippingCost] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 4;\n    const [buttonDisabled, setButtonDisabled] = useState([]);\n    const [isShippingOptionSelected, setIsShippingOptionSelected] = useState(false);\n    const [checkoutError, setCheckoutError] = useState('');\n\n    let totalWeight = 0;\n    let maxLength = 0;\n    let maxWidth = 0;\n    let maxHeight = 0;\n\n    const defaultDimensions = {\n        length: 5,\n        width: 5,\n        height: 5,\n        weight: 2\n    };\n\n\n\n    cartItems.forEach(item => {\n\n        // Use item dimensions if available, otherwise use default dimensions\n        const itemLength = item.length || defaultDimensions.length;\n        const itemWidth = item.width || defaultDimensions.width;\n        const itemHeight = item.height || defaultDimensions.height;\n        const itemWeight = item.weight * item.quantity;\n\n        totalWeight += itemWeight;\n        maxLength = Math.max(maxLength, itemLength);\n        maxWidth = Math.max(maxWidth, itemWidth);\n        maxHeight = Math.max(maxHeight, itemHeight);\n\n    });\n\n\n    const calculateShippingDate = (estimatedDays) => {\n        // Check for invalid or missing estimatedDays\n        if (estimatedDays === null || estimatedDays === undefined || estimatedDays === '' || isNaN(estimatedDays)) {\n            return 'Estimated delivery date not available'; // Fallback message\n        }\n\n        const currentDate = new Date();\n        const shippingDate = addDays(currentDate, estimatedDays);\n        return format(shippingDate, 'MMMM do, yyyy'); // Format date as \"Month day, year\"\n    };\n\n\n\n\n    const calculateShipping = async () => {\n\n\n        if (JSON.stringify(lastAddress) === JSON.stringify(shippingDetails)) {\n            // The address hasn't changed, no need to fetch new rates\n            setShippingOptions(shipmentOptions);\n            return;\n        }\n        try {\n            setLoading(true);\n\n\n            const backendUrl = 'http://localhost:8000/api/shippo';\n            const shipmentDetails = {\n\n                addressTo: {\n                    name: `${shippingDetails.firstName} ${shippingDetails.lastName}`,\n                    street1: shippingDetails.address,\n                    street2: shippingDetails.address2,\n                    city: shippingDetails.city,\n                    state: shippingDetails.state,\n                    zip: shippingDetails.zip,\n                    country: shippingDetails.country\n                },\n\n                parcel: {\n                    length: maxLength.toString(),\n                    width: maxWidth.toString(),\n                    height: maxHeight.toString(),\n                    distance_unit: \"in\",\n                    weight: totalWeight.toString(),\n                    mass_unit: \"oz\"\n                }\n            };\n\n            // Make a POST request to your backend\n            const response = await fetch(backendUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(shipmentDetails),\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text(); // Or response.json() if the response is in JSON format\n                console.error(`HTTP Error: ${response.status} ${response.statusText}`, errorText);\n                throw new Error(`HTTP Error: ${response.status}`);\n            }\n            else {\n                const result = await response.json();\n\n                let sortedRates = result.rates.sort((a, b) => parseFloat(a.amount) - parseFloat(b.amount));\n                if (fullCost.subTotal > 50 || fullCost.subTotal <= 0.03) {\n                    sortedRates = sortedRates.map(rate => ({\n                        ...rate,\n                        amount_local: parseFloat(rate.amount_local) < 10 ? 0.00 : rate.amount_local,\n                        isFree: parseFloat(rate.amount_local) < 10\n                    }));\n                }\n                setShippingOptions(sortedRates); // sorted by cost\n                setLastAddress(shippingDetails);\n                setShipmentOptions(sortedRates);\n\n            }\n\n        } catch (error) {\n            console.error('There was a problem with the fetch operation:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (shippingDetails && shippingDetails.address) { // Check that required details are present\n            calculateShipping();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n    // Scroll to the top when the component mounts\n    useEffect(() => {\n        scrollToTop();\n    }, []);\n\n    useEffect(() => {\n        setButtonDisabled(new Array(shippingOptions.length).fill(false));\n    }, [shippingOptions]);\n\n    const handleSelectShippingOption = (cost, index) => {\n        const formattedShipping = currentItems.map((option,) => (calculateShippingDate(option.estimated_days)))\n        // Check if the selected option is free\n        if (shippingOptions[index].isFree) {\n            cost = 0.00;\n        }\n\n        //setShippingCost(cost);\n        onShippingCostChange(cost); // Pass the cost to the parent component\n        //Pass the selected shipping option to the parent component\n        onShippingOptionsChange(shippingOptions[index]);\n\n        setEstimatedShipping(formattedShipping[index]);\n\n        // Create a new array with all false, except the index that needs to be disabled\n        const updatedDisabledState = buttonDisabled.map((item, idx) => idx === index);\n        setButtonDisabled(updatedDisabledState);\n        setIsShippingOptionSelected(true);\n        shippingOptions[index].parcel = {\n            length: maxLength.toString(),\n            width: maxWidth.toString(),\n            height: maxHeight.toString(),\n            distance_unit: \"in\",\n            weight: totalWeight.toString(),\n            mass_unit: \"oz\"\n        }\n\n        setShippingDetails({ ...shippingOptions[index], ...shippingDetails });\n\n    };\n\n\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItems = shippingOptions.slice(indexOfFirstItem, indexOfLastItem);\n\n    const goToNextPage = () => {\n        setCurrentPage(currentPage + 1);\n    };\n\n    const goToPreviousPage = () => {\n        setCurrentPage(currentPage - 1);\n    };\n\n\n\n\n    const handleLocalCheckout = () => {\n        if (!isShippingOptionSelected) {\n            setCheckoutError('Please select a shipping option to proceed.');\n            return;\n        }\n        handleCheckout();\n    };\n\n    return (\n        <Box className='checkout-shipping-container'>\n\n\n            <ShippingDetailsComponent\n                shippingDetails={shippingDetails}\n                back={back}\n\n            />\n            {loading ? <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                <CircularProgress />\n                Getting Shipping Rates...\n            </Box> :\n                <List>\n\n                    {/* Shipping Options */}\n                    <Typography variant=\"h6\" >\n                        Shipping Method\n                    </Typography>\n                    {checkoutError && (\n                        <Typography color=\"error\" style={{ margin: '10px 0' }}>\n                            {checkoutError}\n                        </Typography>\n                    )}\n\n                    <Box >\n                        <List>\n                            {currentItems.map((option, index) => (\n                                <ListItem\n                                    key={index}\n                                    style={{\n                                        backgroundColor: buttonDisabled[index] ? 'rgba(15, 117, 224, 0.1)' : '',\n                                        borderColor: checkoutError ? '#D23030' : ''\n\n                                    }}\n                                    className={`checkout-shipping-item-${+index}`}\n                                >\n\n                                    <div className='checkout-shipping-item-container'>\n                                        <div >\n                                            <ListItemText className='checkout-shipping-name' primary={option.servicelevel.name} secondary={`Estimated Delivery: ${calculateShippingDate(option.estimated_days)}`} />\n                                            <ListItemAvatar >\n                                                <img src={option.provider_image_75} alt=\"index\" />\n                                            </ListItemAvatar>\n                                        </div>\n                                        <div className='checkout-shipping-item-price-container'>\n                                            <ListItemText className='checkout-shipping-price' primary={option.isFree ? 'Free' : '$' + option.amount_local} style={{ marginRight: '5px' }} />\n\n\n                                            <Button disabled={buttonDisabled[index]} className='checkout-shipping-button' sx={{ fontSize: 12, minWidth: '80px', ml: 2 }} variant=\"outlined\" onClick={() => handleSelectShippingOption(option.amount_local, index)}>\n                                                {buttonDisabled[index] ? 'Selected' : 'Select'}\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </ListItem>\n                            ))}\n\n                        </List>\n                    </Box>\n                    {/* Shipping Options Selector */}\n                    <Grid container style={{ marginTop: '20px', justifyContent: 'space-between' }}>\n                        {currentPage > 1 && (\n                            <Button variant=\"contained\" onClick={goToPreviousPage}>\n                                Previous\n                            </Button>\n                        )}\n                        {indexOfLastItem < shippingOptions.length && (\n                            <Button variant=\"contained\" onClick={goToNextPage}>\n                                {currentPage === 1 ? 'See More Shipping Options' : 'Next'}\n                            </Button>\n                        )}\n                    </Grid>\n\n                </List>\n\n            }\n\n\n            {/* Proceed to Payment Button */}\n            <Grid container sx={{ marginTop: '20px', justifyContent: 'space-between', marginLeft: { xs: 3.5, sm: 0 } }}>\n\n\n                <Button disabled={!!isLoading} onClick={handleLocalCheckout} variant=\"outlined\" sx={{ m: 1, width: { xs: '75%', sm: '45%', md: '230px' }, letterSpacing: 2, color: 'white', backgroundColor: '#283047', height: 56.5, \"&:hover\": { backgroundColor: '#FE6F49', border: 'none', }, textAlign: 'center' }}>\n                    {isLoading ? (\n                        <CircularProgress\n                            size={24}\n                            sx={{ color: '#0F75E0' }}\n                        />\n                    ) : (\n                        <>\n                            <span className='cartSummary-checkout-text'>Proceed to </span> Payment\n                        </>\n                    )}\n                </Button>\n                <Button onClick={back} variant=\"outlined\" sx={{ m: 1, width: { xs: '75%', sm: '45%', md: '230px' }, letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, height: 55, '&:hover': { backgroundColor: '#0F75E0', color: 'white', } }}>\n                    <ArrowBackIosNewIcon sx={{ fontSize: 18, mr: 1 }} />\n                    Return to information</Button>\n\n            </Grid>\n        </Box>\n    );\n};\n\nexport default ShippingComponent;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Typography, List, ListItem, ListItemText, Box, IconButton, Button, Badge } from '@mui/material';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport AddIcon from '@mui/icons-material/Add';\nimport Tooltip from '@mui/material/Tooltip';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { Link } from 'react-router-dom';\nimport '../Styles/CheckoutPage.css'\nconst CartSummaryComponent = ({ cartItems, shippingCost, total, removeFromCart, adjustQuantity, next, step, setFullCost }) => {\n    // Helper function to format cost display\n    const formatCost = (cost) => {\n        return (typeof cost === 'number') ? `$${cost.toFixed(2)}` : cost;\n    };\n    const tax = total * 0.11;\n    const validShippingCost = isNaN(shippingCost) ? 0 : Number(shippingCost);\n    const grandTotal = total + validShippingCost + tax;\n    const boxRef = useRef(null);\n    const [showScrollIcon, setShowScrollIcon] = useState(false);\n\n    useEffect(() => {\n        if (cartItems.length < 2) {\n            return;\n        }\n        const checkOverflow = () => {\n            const isOverflowing = boxRef.current.scrollHeight > boxRef.current.clientHeight;\n            setShowScrollIcon(isOverflowing);\n        };\n        // Check if the content is overflowing when the component mounts\n        checkOverflow();\n\n        // Optional: Re-check on window resize\n        window.addEventListener('resize', checkOverflow);\n        return () => window.removeEventListener('resize', checkOverflow);\n    }, []);\n    const scrollToBottom = () => {\n        if (boxRef.current) {\n            boxRef.current.scrollTop = boxRef.current.scrollHeight;\n        }\n    };\n    //useEffect to update the grandtotal to equal full cost\n    useEffect(() => {\n        setFullCost({\n            subTotal: total,\n            grandTotal: grandTotal,\n            tax: Number(tax.toFixed(2)),\n            shippingCost: validShippingCost,\n        });\n    }\n        , [grandTotal])\n\n\n    const scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n    // Scroll to the top when the component mounts\n    useEffect(() => {\n        scrollToTop();\n    }, []);\n    return (\n        <div className='cartSummary-container' >\n\n\n            <List disablePadding >\n                <Box ref={boxRef} sx={{ maxHeight: '60vh', minHeight: '65vh', overflow: 'auto', mt: { xs: 1, sm: -2.5 }, mb: -1.25, }}>\n\n                    <Typography variant=\"h1\" component=\"h1\" sx={{ borderBottom: .1, my: 2, textAlign: 'center', fontSize: 'h5.fontSize' }} gutterBottom>\n\n                        Order Summary\n                    </Typography>\n                    {cartItems.length === 0 ? (\n\n                        // This section renders when the cart is empty\n                        <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between', alignItems: \"center\", height: '50vh' }}>\n                            <Typography align=\"center\" sx={{ mt: 3, fontVariant: 'all-small-caps', fontSize: { xs: 16, sm: 20, md: 22 }, fontWeight: 100 }}>\n                                Your Cart Is Empty!\n\n                            </Typography>\n\n                            <svg height='150' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\">\n                                <path d=\"M922.9 701.9H327.4l29.9-60.9 496.8-.9c16.8 0 31.2-12 34.2-28.6l68.8-385.1c1.8-10.1-.9-20.5-7.5-28.4a34.99 34.99 0 0 0-26.6-12.5l-632-2.1-5.4-25.4c-3.4-16.2-18-28-34.6-28H96.5a35.3 35.3 0 1 0 0 70.6h125.9L246 312.8l58.1 281.3-74.8 122.1a34.96 34.96 0 0 0-3 36.8c6 11.9 18.1 19.4 31.5 19.4h62.8a102.43 102.43 0 0 0-20.6 61.7c0 56.6 46 102.6 102.6 102.6s102.6-46 102.6-102.6c0-22.3-7.4-44-20.6-61.7h161.1a102.43 102.43 0 0 0-20.6 61.7c0 56.6 46 102.6 102.6 102.6s102.6-46 102.6-102.6c0-22.3-7.4-44-20.6-61.7H923c19.4 0 35.3-15.8 35.3-35.3a35.42 35.42 0 0 0-35.4-35.2zM305.7 253l575.8 1.9-56.4 315.8-452.3.8L305.7 253zm96.9 612.7c-17.4 0-31.6-14.2-31.6-31.6 0-17.4 14.2-31.6 31.6-31.6s31.6 14.2 31.6 31.6a31.6 31.6 0 0 1-31.6 31.6zm325.1 0c-17.4 0-31.6-14.2-31.6-31.6 0-17.4 14.2-31.6 31.6-31.6s31.6 14.2 31.6 31.6a31.6 31.6 0 0 1-31.6 31.6z\" />\n                            </svg>\n                            <Button to=\"/shop\" component={Link} sx={{ border: 1, width: '50%', borderRadius: 0, letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, height: 55, '&:hover': { backgroundColor: '#0F75E0', color: 'white' } }} > Start Shopping</Button>\n                        </Box>\n                    ) : (\n                        cartItems.map((item, index) => (\n                            <Box key={'product:' + index} sx={{ display: 'flex', mx: { xs: 2, sm: 5 }, my: 2 }}>\n                                <Badge badgeContent={item.quantity} color=\"secondary\" sx={{ '.MuiBadge-badge': { backgroundColor: 'rgba(195, 26, 210, 0.72)', color: 'white' } }}>\n                                    <img className='cart-img' src={item.img}\n                                        alt={item.name} width={80} height={80} loading='lazy' />\n                                </Badge>\n                                <Box >\n                                    <Box sx={{\n                                        ml: 1,\n\n                                    }}>\n                                        <Typography sx={{\n                                            fontWeight: 500,\n                                            fontSize: 18,\n                                            fontFamily: '\"Avenir Next\", sans-serif',\n                                            fontVariantCaps: 'all-small-caps',\n                                            lineHeight: { xs: 1 },\n                                            width: { xs: 'auto', md: '100%' }\n                                        }}\n                                            variant=\"h6\">{item.name}</Typography>\n                                        <Typography sx={{ fontFamily: '\"Avenir Next\", sans-serif', fontWeight: 200, color: 'black', fontVariantCaps: 'all-small-caps', lineHeight: 1 }}>{item.specs}</Typography>\n\n                                    </Box>\n                                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: { xs: '100%', md: '290px' } }}>\n                                        <Typography sx={{ fontWeight: 100, color: 'gray', ml: 1, }}>${item.price.toFixed(2) * item.quantity}</Typography>\n                                        {/* Quantity Controls */}\n                                        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' }, justifyContent: 'space-between', alignItems: \"center\" }}>\n                                            <Box sx={{ border: 1, width: 100, display: step > 1 ? 'none' : 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                                <IconButton onClick={() => adjustQuantity(item._id, item.quantity - 1)}>\n                                                    <RemoveIcon sx={{ fontSize: 10 }} />\n                                                </IconButton>\n                                                <Typography sx={{ fontWeight: 100 }}>\n                                                    {item.quantity}\n                                                </Typography>\n                                                <IconButton onClick={() => adjustQuantity(item._id, item.quantity + 1)}>\n                                                    <AddIcon sx={{ fontSize: 10 }} />\n                                                </IconButton>\n                                            </Box>\n\n\n                                        </Box>\n                                        {/* Remove Button */}\n                                        <Box sx={{}}>\n                                            <Button sx={{ fontSize: 12, color: '#0F75E0', textDecoration: 'underline', }} onClick={() => removeFromCart(item._id)}>Remove</Button>\n                                        </Box>\n                                    </Box>\n                                </Box>\n\n                            </Box>\n\n                        ))\n                    )}\n                </Box>\n                {cartItems.length > 0 && (\n                    <>\n                        {showScrollIcon && (\n                            <IconButton onClick={scrollToBottom} sx={{\n                                position: 'absolute', right: { xs: '20vw', sm: '8vw' }, bottom: step !== 0 ? 225 : { xs: 360, sm: 290 }, backgroundColor: 'rgba(255, 255, 255, 0.7)',\n                                backdropFilter: 'blur(4px)',\n                                borderRadius: '50%',\n                                border: '1px solid black'\n                            }}>\n                                <ArrowDownwardIcon />\n                            </IconButton>\n                        )}\n                        {/*<Divider style={{ margin: '10px 0' }} className='cartSummary-cost-divider' />*/}\n                        <Box className=\"cartSummary-cost\">\n                            <ListItem style={{ padding: '10px 0' }}>\n                                <ListItemText primary=\"Subtotal\" />\n                                <Typography variant=\"subtitle1\" style={{ fontWeight: 500 }}>\n                                    {formatCost(total)}\n                                </Typography>\n                            </ListItem>\n                            <ListItem style={{ padding: '10px 0' }}>\n                                <ListItemText primary=\"Shipping\" />\n                                <Typography variant=\"body2\">\n                                    {shippingCost === 0.00 ? 'Free!' : formatCost(shippingCost)}\n                                </Typography>\n                            </ListItem>\n\n                            <ListItem style={{ padding: '10px 0' }}>\n                                <ListItemText primary={\n                                    <Box component=\"span\" sx={{ display: 'flex', alignItems: 'center', }}>\n                                        Estimated Taxes\n                                        <Tooltip title=\"The final tax and total will be confirmed by email or text after you place your order.\" arrow>\n                                            <InfoOutlinedIcon sx={{ fontSize: 18, ml: 1, cursor: 'pointer' }} />\n                                        </Tooltip>\n                                    </Box>\n                                } />\n                                <Typography variant=\"body2\">{formatCost(tax)}</Typography>\n                            </ListItem>\n\n                            <ListItem style={{ padding: '10px 0' }}>\n                                <ListItemText primary=\"Total\" />\n                                <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\n                                    {formatCost(grandTotal)}\n\n                                </Typography>\n                            </ListItem>\n                        </Box>\n                        {step === 0 ?\n                            <Box className=\"cartSummary-checkout-button\">\n                                <Button onClick={next} variant=\"outlined\" sx={{ m: 1, width: { xs: '75%', sm: '45%', md: '40%' }, letterSpacing: 2, color: 'white', backgroundColor: '#283047', height: 56.5, \"&:hover\": { backgroundColor: '#FE6F49', border: 'none', }, textAlign: 'center' }}><span className='cartSummary-checkout-text'>Proceed  to </span> Checkout</Button>\n\n                                <Button component={Link} to='/shop' variant=\"outlined\" sx={{ m: 1, width: { xs: '75%', sm: '45%', md: '40%' }, letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, height: 55, '&:hover': { backgroundColor: '#0F75E0', color: 'white', } }}>Continue Shopping</Button>\n\n                            </Box> : null}\n                    </>\n                )}\n\n            </List>\n\n        </div>\n\n    );\n};\n\nexport default CartSummaryComponent;\n","import React, { useEffect } from 'react';\nimport { PaymentForm, CreditCard, } from 'react-square-web-payments-sdk';\nimport ShippingDetailsComponent from './ShippingDetailsComponent';\nimport { Button, Typography } from '@mui/material';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport '../Styles/CheckoutPage.css'\nconst SquarePaymentForm = ({ onPaymentProcess, shippingDetails, back, errors, total }) => {\n\n\n    const applicationId = process.env.REACT_APP_SQUARE_APPLICATION_ID_SANDBOX;\n    const locationId = process.env.REACT_APP_SQUARE_LOCATION_ID_SANDBOX;\n\n\n    const handleTokenRecieved = (paymentToken) => {\n        // Call your onPaymentProcess function with the paymentToken\n        onPaymentProcess(paymentToken);\n    };\n    const scrollToTop = () => {\n        window.scrollTo(0, 0);\n      };\n      // Scroll to the top when the component mounts\n      useEffect(() => {\n        scrollToTop();\n      }, []);\n\n    return (\n        <div className='checkout-paymentForm-container'>\n            <ShippingDetailsComponent\n                shippingDetails={shippingDetails}\n                back={back}\n\n            />\n            <Typography mt={8} sx={{mb:{xs:2, sm:0}}} variant='h6'  >\n                Payment:  </Typography>\n            <Typography variant=\"body2\" fontWeight={100} className='checkout-paymentForm-SQUARE'>\n                <span className='square-text'> All transactions are processed secured and encrypted by</span>    <img src=\"https://images.ctfassets.net/2d5q1td6cyxq/58rgox9CjnDZYQSxSwikxb/d9cae0bf4d3f53900820eac00b049528/PD04488_-_black_logo_on_white.png?w=1502&h=768&fm=avif&q=85&fit=scale\" alt=\"square-logo\" className='checkout-paymentForm-logo' />\n            </Typography>\n            <Typography variant='body2' fontWeight={100} className='square-form-text'>Square© Payment Form</Typography>\n            <div className='checkout-payment-card-form'>\n                <Typography color='error' variant=\"body2\" fontWeight={100} className='checkout-paymentForm-SQUARE'>\n                    {errors}\n                </Typography>\n                <PaymentForm\n                    applicationId={applicationId}\n                    locationId={locationId}\n                    cardTokenizeResponseReceived={handleTokenRecieved}\n                >\n                    <Typography color={'primary'}>Will be Charged: ${total.grandTotal.toFixed(2)}</Typography>\n                    <CreditCard />\n                    {/* Google Pay button */}\n\n\n                </PaymentForm>\n\n            </div>\n            <Button onClick={back} variant=\"outlined\" sx={{ mt: 3, width: '100%', letterSpacing: 2, color: '#283047', backgroundColor: 'white', borderColor: '#283047', borderWidth: 1.5, height: 50, '&:hover': { backgroundColor: '#0F75E0', color: 'white', } }}>\n                <ArrowBackIosNewIcon sx={{ fontSize: 18, mr: 1 }} />\n                Return to shipping</Button>\n        </div>\n    );\n};\n\nexport default SquarePaymentForm;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Fade, Box, Typography, CircularProgress } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst modalStyle = { display: 'flex', alignItems: 'center', justifyContent: 'center' };\nconst divStyle = { display: 'flex', flexDirection: 'column', alignItems: 'center', backgroundColor: 'rgba(255, 255, 255, 0.8)', padding: '20px', borderRadius: '10px' };\nconst textStyle = { marginTop: '10px', fontSize: '16px' };\n\nfunction CircularProgressWithLabel(props) {\n    return (\n        <Box sx={{ position: 'relative', display: 'inline-flex' }}>\n            <CircularProgress variant=\"determinate\" {...props} />\n            <Box\n                sx={{\n                    top: 0,\n                    left: 0,\n                    bottom: 0,\n                    right: 0,\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n            >\n                <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n                    {`${Math.round(props.value)}%`}\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n\nCircularProgressWithLabel.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\nconst LoadingModal = ({ open, message }) => {\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 1.5));\n        }, 100);\n\n        return () => {\n            clearInterval(timer);\n            if (!open) {\n                setProgress(0);\n            }\n        };\n    }, [open]);\n\n    return (\n        <Modal\n            open={open}\n            closeAfterTransition\n            style={modalStyle}\n        >\n            <Fade in={open} timeout={500}>\n                <div style={divStyle}>\n                    <CircularProgressWithLabel value={progress} />\n                    <span style={textStyle}>{message}</span>\n                </div>\n            </Fade>\n        </Modal>\n    );\n};\n\nLoadingModal.propTypes = {\n    open: PropTypes.bool.isRequired,\n    message: PropTypes.string.isRequired,\n};\n\nexport default LoadingModal;\n","import React, { useState, useEffect } from 'react';\nimport { Stepper, Step, StepLabel, Box, Snackbar, Alert, IconButton, CircularProgress, Modal, Button } from '@mui/material';\nimport InformationPage from '../components/InformationPage';\nimport ShippingComponent from '../components/ShippingComponent';\nimport CartSummaryComponent from '../components/CartSummaryComponent';\nimport { useCart } from '../components/CartContext';\nimport { useNavigate, useParams, Link } from 'react-router-dom';\nimport SquarePaymentForm from '../components/SquarePaymentForm';\nimport LoadingModal from '../components/Common/LoadingModal';\nimport { useAuth } from '../components/Utilities/useAuth';\nimport ShippingDetailsComponent from '../components/ShippingDetailsComponent';\nimport BrandIcon from '../assets/cbdtextwicon.webp'\nimport '../Styles/CheckoutPage.css'\n\nconst CheckoutPage = () => {\n    useEffect(() => {\n        document.title = \"Checkout - Complete Your Herba Natural Purchase\";\n        document.querySelector('meta[name=\"description\"]').setAttribute(\"content\", \"Secure checkout process for your Herba Natural purchases. Complete your order of premium CBD products quickly and safely.\");\n    }, []);\n\n\n    const [isSquareSdkLoaded, setIsSquareSdkLoaded] = useState(false);\n    const navigate = useNavigate();\n    const { step } = useParams();\n    const activeStep = parseInt(step) - 1;\n    const [shippingDetails, setShippingDetails] = useState({});\n    const steps = ['Cart', 'Information', 'Shipping', 'Payment'];\n    const { cart, removeFromCart, adjustQuantity, notes, clearCart } = useCart();\n    const [shippingCost, setShippingCost] = useState('Calculated at Next Step');\n    const total = cart.reduce((acc, item) => acc + item.product.price * item.quantity, 0);\n    const tax = \"Calculated at checkout\";\n    const [fullCost, setFullCost] = useState({});\n    const [shippingOptions, setShippingOptions] = useState({});\n    const [shipmentOptions, setShipmentOptions] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [orderData, setOrderData] = useState({})\n    const [estimatedShipping, setEstimatedShipping] = useState('')\n    const [lastAddress, setLastAddress] = useState({});\n    const { isLoggedIn } = useAuth();\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [paymentError, setPaymentError] = useState('')\n    const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n\n\n    const handleOpenSnackbar = () => {\n        setSnackbarOpen(true);\n    };\n\n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return; // Do not close if the user clicks away\n        }\n        setSnackbarOpen(false);\n    };\n\n    const handleBrandIconClick = () => {\n        setOpenConfirmDialog(true);\n    };\n    const handleConfirmNavigation = () => {\n        navigate('/'); // navigate to home\n    };\n\n    const handleCloseDialog = () => {\n        setOpenConfirmDialog(false);\n    };\n\n\n\n\n\n    const [formData, setFormData] = useState({\n        email: '',\n        firstName: '',\n        lastName: '',\n        address: '',\n        address2: '',\n        city: '',\n        state: '',\n        zip: '',\n        country: ''\n    });\n\n    const isGuestUser = () => {\n        const customerId = localStorage.getItem('customerId');\n        const isGuestFlag = localStorage.getItem('isGuest') === 'true';\n\n        return (customerId && customerId.startsWith('guest-')) || isGuestFlag;\n\n    };\n\n\n\n\n\n    const loadSquareSdk = () => {\n        setIsSquareSdkLoaded(false);\n\n        const script = document.createElement('script');\n        script.src = \"https://web.squarecdn.com/v1/square.js\"; // URL for production\n        script.type = \"text/javascript\";\n        script.async = false;\n        script.onload = () => setIsSquareSdkLoaded(true);\n        script.onerror = () => {\n            // Handle error loading the script\n            console.error('Failed to load Square SDK');\n            // Optionally, update the state to reflect the error\n        };\n        document.body.appendChild(script);\n    };\n\n    const cleanupSquareSdk = () => {\n        // Remove the Square SDK script from the DOM\n        const squareScript = document.querySelector('script[src=\"https://web.squarecdn.com/v1/square.js\"]');\n        if (squareScript) {\n            document.body.removeChild(squareScript);\n        }\n\n        // Reset any related state variables if necessary\n        setIsSquareSdkLoaded(false);\n\n        // Additional cleanup tasks if required\n\n    };\n\n    useEffect(() => {\n        if (activeStep === 3 && !isSquareSdkLoaded) {\n            loadSquareSdk();\n        } else if (activeStep !== 3) {\n            cleanupSquareSdk()\n        }\n        if (activeStep === 0 && isGuestUser()) {\n            handleOpenSnackbar();\n        }\n    }, [activeStep, isSquareSdkLoaded]);\n\n\n    const onPaymentProcess = (paymentToken) => {\n        finalizeOrderAndProcessPayment(paymentToken)\n    };\n\n\n\n    const finalizeOrderAndProcessPayment = async (paymentToken) => {\n        setIsLoading(true);\n        try {\n\n            // Convert amount to cents \n            const paymentAmount = Math.round(fullCost.grandTotal * 100);\n\n\n            // First, process the payment with Square\n            if (paymentToken) {\n\n                const trackingInfo = await createShippingLabelAsync(shippingDetails);\n                orderData.shippingMethod = {\n                    ...orderData.shippingMethod,\n                    carrier: trackingInfo.rate.provider,\n                    trackingNumber: trackingInfo.tracking_number,\n                    trackingUrl: trackingInfo.tracking_url_provider,\n                    labelUrl: trackingInfo.label_url,\n                    estimatedShipping: estimatedShipping\n                };\n\n                //MAKE PAYMENT\n                const paymentResult = await processPaymentAsync(paymentToken, paymentAmount, orderData)\n\n\n\n                // Check if payment was successful\n                if (paymentResult.success === true) {\n                    orderData.transactionId = paymentResult.response.result.payment.id;\n                    orderData.paymentStatus = 'Paid';\n\n\n                    if (isGuestUser()) {\n                        orderData.createdBy = localStorage.getItem('customerId'); // ID of the guest user\n                        orderData.createdByType = 'Guest';\n                    } else {\n                        orderData.createdBy = localStorage.getItem('customerId'); // ID of the registered user\n                        orderData.createdByType = 'Customer';\n                    }\n                    // Now, create the order in the database\n\n                    const createdOrder = await createOrderAsync(orderData);\n                    if (!isGuestUser()) {\n                        // Update customer data for registered users\n                        const updatedCustomerData = { orders: createdOrder._id };\n                        await updateCustomerDataAsync(localStorage.getItem('customerId'), updatedCustomerData);\n                    } else {\n                        // Update guest data for guest users\n                        const guestData = { orders: createdOrder._id };\n                        await updateGuestDataAsync(localStorage.getItem('customerId'), guestData);\n                        const isVerified = localStorage.getItem('isVerified')\n                        localStorage.clear();\n                        localStorage.setItem('isVerified', isVerified)\n                    }\n\n                    clearCart()\n                    // Navigate to success page after all processes are complete\n                    navigate('/success', { state: { paymentResult: paymentResult } });\n                } else {\n                    // Handle payment processing failure\n                    console.error('Payment processing failed:', paymentResult);\n\n\n                }\n            } else {\n\n                console.error('Missing payment token');\n            }\n        } catch (error) {\n            console.error('Error during finalizing order and payment:', error);\n        } finally {\n            setIsLoading(false); // Stop loading state after all processes are complete or an error occurs\n\n        }\n    };\n\n\n    useEffect(() => {\n        const customerId = localStorage.getItem('customerId');\n        const isGuest = isGuestUser();\n\n        if (!isLoggedIn && !isGuest) {\n            // Redirect to registration if not logged in and not a guest\n            navigate('/registration?returnUrl=/checkout/1');\n        } else if (!customerId && !isGuest) {\n            // Redirect to login if no customerId and not a guest\n            navigate('/login?returnUrl=/checkout/1');\n        } else {\n            // Proceed with checkout logic for logged-in or guest users\n        }\n    }, [isLoggedIn, navigate]);\n\n\n\n\n\n\n    const handleCheckout = async () => {\n        setIsLoading(true); // Turn on loading state\n        const customerId = localStorage.getItem('customerId')\n        const customerEmail = localStorage.getItem('userEmail')\n        setOrderData({\n            customer: customerId,\n            customerEmail: formData.email || customerEmail,\n            //customer phone \n            customerPhone: shippingDetails.phone,\n            products: cart.map(item => ({\n                name: item.product.name,\n                productId: item.product._id,\n                price: item.product.price,\n                quantity: item.quantity,\n                img: item.product.imgSource[0].url\n            })),\n            shippingMethod: {\n                provider: shippingOptions.provider,\n                carrierAccountId: shippingOptions.carrier_account,\n                serviceLevelToken: shippingOptions.servicelevel.token,\n                price: shippingOptions.amount,\n                amountCharged: shippingOptions.amount_local,\n                type: shippingOptions.servicelevel.name\n\n            },\n            totalAmount: fullCost,\n            orderNotes: notes,\n            address: `${shippingDetails.firstName} ${shippingDetails.lastName}, ${shippingDetails.address}, ${shippingDetails.address2 ? shippingDetails.address2 : ''}, ${shippingDetails.city}, ${shippingDetails.state}, ${shippingDetails.zip}, ${shippingDetails.country}`,\n            createdBy: localStorage.getItem('customerId'),\n        })\n        setIsLoading(false)\n        handleNext();\n    }\n\n\n    const processPaymentAsync = async (paymentToken, paymentAmount, orderData) => {\n        try {\n            const response = await fetch('http://localhost:8000/api/payment/process-payment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    sourceId: paymentToken.token, //'cnon:card-nonce-ok', // or sourceId: paymentToken.token,\n                    amount: paymentAmount,\n                    cost: fullCost, // Ensure 'fullCost' is defined in your context\n                    notes: notes, // Ensure 'notes' is defined in your context\n                    estimatedShipping: estimatedShipping, // Ensure 'estimatedShipping' is defined in your context\n                    orderDetails: orderData,\n                    last4: paymentToken.details.card.last4\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`Payment processing failed: HTTP ${response.status} - ${await response.text()}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('Error processing payment:', error);\n            setPaymentError('There was a problem processing your payment')\n            return null; // Return null in case of error\n        }\n    };\n\n\n\n\n\n\n    const createOrderAsync = async (orderData) => {\n        try {\n            const orderResponse = await fetch('http://localhost:8000/api/order/create', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify(orderData),\n            });\n\n            const createdOrder = await orderResponse.json();\n            if (!createdOrder || orderResponse.status !== 200) {\n                console.error('Error creating order:', createdOrder.message);\n\n                return null; // Return null if order creation fails\n            }\n            return createdOrder; // Return the created order\n        } catch (error) {\n            console.error('Error creating order asynchronously:', error);\n            return null; // Return null in case of error\n        }\n    };\n\n    const createShippingLabelAsync = async (shippingDetails) => {\n        try {\n            const backendUrl = 'http://localhost:8000/api/shippo/create';\n            const response = await fetch(backendUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ shippingDetails }),\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text(); // Or response.json() if the response is in JSON format\n                console.error(`HTTP Error: ${response.status} ${response.statusText}`, errorText);\n                throw new Error(`HTTP Error: ${response.status}`);\n            } else {\n                const result = await response.json();\n\n                return result\n\n            }\n        } catch (error) {\n            console.error('Error creating shipping label:', error);\n\n        }\n    };\n\n    const updateCustomerDataAsync = async (customerId, data) => {\n        try {\n            await fetch(`http://localhost:8000/api/customer/${customerId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify(data)\n            });\n            // Optionally handle the response or errors\n        } catch (error) {\n            console.error('Error updating customer data:', error);\n            // Handle errors or log them, as per your application's needs\n        }\n    }\n\n\n    const updateGuestDataAsync = async (customerId, data) => {\n        try {\n            await fetch(`http://localhost:8000/api/guest/${customerId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify(data)\n            });\n\n            // Optionally handle the response or errors\n        } catch (error) {\n\n            console.error('Error updating customer data:', error);\n            // Handle errors or log them, as per your application's needs\n        }\n    }\n\n\n\n\n\n\n\n\n    const handleFormChange = (name, value) => {\n        setFormData(prevFormData => ({\n            ...prevFormData,\n            [name]: value\n        }));\n\n    }\n\n\n\n    const handleShippingCostChange = (cost) => {\n        setShippingCost(cost);\n    };\n\n    const handleShippingDetailsSubmit = (details) => {\n        setFormData(details);\n        setShippingDetails(details);\n    };\n\n    const handleShippingOptions = (options, info) => {\n        setShippingOptions(options, info);\n\n    };\n\n    useEffect(() => {\n        // If the URL step is not valid, redirect to the first step\n        if (isNaN(activeStep) || activeStep < 0 || activeStep >= steps.length) {\n            navigate('/checkout/1');\n        }\n    }, [activeStep, steps.length, navigate]);\n\n\n\n    const handleNext = () => {\n        navigate(`/checkout/${activeStep + 2}`); // Navigate to the next step\n    };\n\n    const handleBack = () => {\n        navigate(`/checkout/${activeStep}`); // Navigate to the previous step\n    };\n\n\n\n\n\n\n    const stepperStyles = {\n        position: { xs: 'fixed', sm: 'relative' }, // 'fixed' on xs screens, 'relative' otherwise\n        top: { xs: 0, sm: 'auto' }, // Stick to the top on xs screens\n        zIndex: { xs: 10000, sm: 'auto' }, // Ensure it's above other content\n        pt: { xs: 6, sm: 0 },\n        pb: { xs: 1, sm: 0 },\n        width: { xs: '100%' }, // Full width on xs screens\n        bgcolor: { xs: 'background.paper' }, // Add background color for visibility\n        borderBottom: { xs: '0.1px solid black', sm: 'none' },\n\n    };\n\n\n    const brandIconStyles = {\n        position: 'fixed', // 'fixed' on xs screens, 'relative' otherwise\n        top: -40,\n        left: 35,\n        textAlign: 'center',\n        zIndex: { xs: 10001, sm: 'auto' }, // Ensure it's above other content\n        pt: { xs: 3.5, sm: 0 },\n        pb: { xs: 1, sm: 0 },\n\n        display: { xs: 'block', sm: 'none' },\n        minWidth: '350px',\n        cursor: 'pointer',\n    };\n    const modalStyle = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 300, // Adjust the width as needed\n        bgcolor: 'background.paper',\n        boxShadow: 24,\n        p: 4,\n        borderRadius: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    };\n\n    const textStyle = {\n        marginBottom: '20px',\n        textAlign: 'center',\n\n    };\n\n    const buttonStyle = {\n        marginTop: '10px',\n        width: '80%', // Adjust the width as needed\n    };\n\n\n    return (\n        <div className='checkoutPage-container'>\n\n            <LoadingModal open={isLoading} message=\"Your payment is being processed, Please do not leave or refresh this page\" />\n            <Box sx={{ display: 'flex', flexDirection: { xs: 'column-reverse', md: 'row' } }}>\n                <div style={{ flex: 1 }}>\n\n                    <div>\n\n                        <div>\n                            <Box sx={brandIconStyles} className='brand-icon-checkout' onClick={handleBrandIconClick}>\n                                <img src={BrandIcon} alt=\"brand-con\" width={'80%'} height={'auto'} />\n                            </Box>\n\n                            <Stepper activeStep={activeStep} alternativeLabel sx={stepperStyles}>\n                                {steps.map((label) => (\n                                    <Step key={label}>\n\n                                        <StepLabel >{label}</StepLabel>\n                                    </Step>\n                                ))}\n                            </Stepper>\n                            <Box sx={{ mt: { xs: 5, sm: 0 } }}>\n                                {activeStep === 0 &&\n                                    <Box sx={{ pt: { xs: 0, sm: 2.5 }, borderTop: { xs: 'none', sm: '0.1px solid black}', }, }} className='cartSummary-component-box'>\n                                        <CartSummaryComponent\n                                            cartItems={cart.map(item => ({\n                                                _id: item.product._id,\n                                                img: item.product.imgSource[0].url,\n                                                name: item.product.name,\n                                                quantity: item.quantity,\n                                                price: item.product.price,\n                                                specs: item.product.specs,\n                                            }))}\n                                            shippingCost={shippingCost}\n                                            tax={tax}\n                                            total={total}\n                                            removeFromCart={removeFromCart}\n                                            adjustQuantity={adjustQuantity}\n                                            next={handleNext}\n                                            step={activeStep}\n                                            setFullCost={setFullCost}\n\n                                        />\n                                    </Box>\n                                }\n                                {activeStep === 1 && <InformationPage\n                                    back={handleBack}\n                                    next={handleNext}\n                                    onShippingDetailsSubmit={handleShippingDetailsSubmit}\n                                    formData={formData}\n                                    onFormChange={handleFormChange}\n                                />}\n                                {activeStep === 2 && <ShippingComponent\n\n                                    handleBack\n                                    cartItems={cart.map(item => ({\n                                        _id: item.product._id,\n                                        weight: item.product.shipping.weight,\n                                        length: item.product.shipping.dimensions.length,\n                                        width: item.product.shipping.dimensions.width,\n                                        height: item.product.shipping.dimensions.height,\n                                        quantity: item.quantity,\n                                    }))}\n                                    shippingDetails={shippingDetails}\n                                    onShippingCostChange={handleShippingCostChange}\n                                    formData={formData}\n                                    back={handleBack}\n                                    next={handleNext}\n                                    onShippingOptionsChange={handleShippingOptions}\n                                    handleCheckout={handleCheckout}\n                                    isLoading={isLoading}\n                                    setEstimatedShipping={setEstimatedShipping}\n                                    lastAddress={lastAddress}\n                                    setLastAddress={setLastAddress}\n                                    shipmentOptions={shipmentOptions}\n                                    setShipmentOptions={setShipmentOptions}\n                                    fullCost={fullCost}\n                                    setShippingDetails={setShippingDetails}\n                                />}\n                                {activeStep === 3 && (\n                                    isSquareSdkLoaded ? (\n                                        <SquarePaymentForm\n                                            onPaymentProcess={onPaymentProcess}\n                                            paymentForm={window.SqPaymentForm}\n                                            shippingDetails={shippingDetails}\n                                            back={handleBack}\n                                            errors={paymentError}\n                                            total={fullCost}\n\n                                        />\n                                    ) : (\n                                        <div style={{ margin: '20px' }}>\n                                            <ShippingDetailsComponent\n                                                shippingDetails={shippingDetails}\n                                                back={handleBack}\n\n                                            />\n                                            <CircularProgress />\n                                        </div>\n                                    ))}\n                            </Box>\n                        </div>\n\n                    </div>\n\n                </div>\n                {/* if cart summary doesnt equal 0 then display it */}\n                {/* else dont display it */}\n                {/* Cart Summary Component */}\n                {activeStep !== 0 && cart.length !== 0 ?\n                    <div style={{ flex: 0.9, }}>\n                        {/* Cart Summary Component */}\n                        <CartSummaryComponent\n                            cartItems={cart.map(item => ({\n                                _id: item.product._id,\n                                img: item.product.imgSource[0].url,\n                                name: item.product.name,\n                                quantity: item.quantity,\n                                price: item.product.price,\n                                specs: item.product.specs,\n                            }))}\n                            shippingCost={shippingCost}\n                            tax={tax}\n                            total={total}\n                            removeFromCart={removeFromCart}\n                            adjustQuantity={adjustQuantity}\n                            setFullCost={setFullCost}\n                            handleCheckout={handleCheckout}\n                            step={activeStep}\n                        />\n                    </div>\n                    : null}\n            </Box>\n\n            <Snackbar\n                open={snackbarOpen}\n                autoHideDuration={null}\n                onClose={handleCloseSnackbar}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            >\n                <Alert\n\n                    action={\n                        <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            onClick={handleCloseSnackbar}\n                        >\n                            {/* CLOSE ICON */}\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill='black' height=\"40\" width=\"40\"><path d=\"m10.458 31.458-1.916-1.916 9.5-9.542-9.5-9.542 1.916-1.916 9.542 9.5 9.542-9.5 1.916 1.916-9.5 9.542 9.5 9.542-1.916 1.916-9.542-9.5Z\" /></svg>\n                        </IconButton>\n                    }\n                >\n                    Checking out as guest.<br />   <Link to=\"/registration\" color=\"inherit\" underline=\"hover\">\n                        Create account?\n                    </Link>\n                </Alert>\n            </Snackbar>\n            <Modal open={openConfirmDialog} onClose={handleCloseDialog}>\n                <Box sx={modalStyle}>\n                    <p style={textStyle}>Are you sure you want to leave the checkout process? Your progress may* be lost.</p>\n                    <Button color='error' style={buttonStyle} onClick={handleConfirmNavigation}>Yes, leave</Button>\n                    <Button style={buttonStyle} onClick={handleCloseDialog}>No, stay</Button>\n                </Box>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CheckoutPage;\n"],"names":["_ref","id","label","fullWidth","variant","onAddressSelected","value","setValue","error","helperText","color","focused","onBlur","sx","autocompleteInput","useRef","isApiLoaded","setIsApiLoaded","useState","window","google","useEffect","initAutocomplete","autocomplete","maps","places","Autocomplete","current","types","addListener","place","getPlace","loadScript","document","querySelector","script","createElement","src","concat","process","async","defer","head","appendChild","getElementById","removeChild","_jsx","TextField","inputRef","InputProps","endAdornment","InputAdornment","position","children","Tooltip","title","IconButton","mr","height","fill","viewBox","xmlns","d","CircularProgress","size","thickness","onChange","e","target","autoComplete","next","back","onShippingDetailsSubmit","formData","firstName","setFirstName","lastName","setLastName","email","setEmail","phone","setPhone","address","setAddress","address2","setAddress2","city","setCity","state","setState","zip","setZip","country","setCountry","formSubmitted","setFormSubmitted","isLoggedIn","useAuth","storedFirstName","localStorage","getItem","storedLastName","storedEmail","storedPhone","storedAddress","storedAddress2","storedCity","storedState","storedZip","storedCountry","isGuestUser","customerId","isGuestFlag","startsWith","token","userId","jwtDecode","fetchCustomerData","scrollTo","fetch","credentials","then","response","ok","Error","json","data","catch","console","errors","setErrors","validateField","fieldName","errorMsg","test","prevErrors","handleSubmit","event","preventDefault","isEmailValid","isFirstNameValid","isLastNameValid","isAddressValid","isCityValid","isStateValid","isZipValid","isCountryValid","details","submitFormData","every","key","charAt","toUpperCase","slice","doesFormDataMatchLocalStorage","url","method","headers","body","JSON","stringify","errorData","message","responseData","idToStore","_id","setItem","Object","keys","forEach","dataToSend","log","textFieldStyles","fontSize","border","onSubmit","className","_jsxs","FormControl","Typography","fontWeight","pb","mb","type","required","name","disabled","formattedPhoneNumber","phoneNumber","replace","phoneNumberLength","length","formatPhoneNumber","my","Grid","container","spacing","item","xs","sm","AddressAutocomplete","streetNumber","route","address_components","component","componentType","long_name","short_name","streetAddress","style","transform","Button","onClick","m","letterSpacing","backgroundColor","borderColor","borderWidth","ArrowBackIosNewIcon","display","textAlign","shippingDetails","buttonStyle","textDecoration","cartItems","onShippingCostChange","isLoading","onShippingOptionsChange","handleCheckout","setEstimatedShipping","lastAddress","setLastAddress","shipmentOptions","setShipmentOptions","fullCost","setShippingDetails","shippingOptions","setShippingOptions","loading","setLoading","currentPage","setCurrentPage","buttonDisabled","setButtonDisabled","isShippingOptionSelected","setIsShippingOptionSelected","checkoutError","setCheckoutError","totalWeight","maxLength","maxWidth","maxHeight","defaultDimensions","itemLength","itemWidth","width","itemHeight","itemWeight","weight","quantity","Math","max","calculateShippingDate","estimatedDays","undefined","isNaN","currentDate","Date","shippingDate","addDays","format","backendUrl","shipmentDetails","addressTo","street1","street2","parcel","toString","distance_unit","mass_unit","errorText","text","status","statusText","sortedRates","rates","sort","a","b","parseFloat","amount","subTotal","map","rate","amount_local","isFree","calculateShipping","Array","indexOfLastItem","indexOfFirstItem","currentItems","Box","ShippingDetailsComponent","flexDirection","justifyContent","alignItems","List","margin","option","index","ListItem","ListItemText","primary","servicelevel","secondary","estimated_days","ListItemAvatar","provider_image_75","alt","marginRight","minWidth","ml","handleSelectShippingOption","cost","formattedShipping","updatedDisabledState","idx","marginTop","goToPreviousPage","goToNextPage","marginLeft","handleLocalCheckout","md","_Fragment","shippingCost","total","removeFromCart","adjustQuantity","step","setFullCost","formatCost","toFixed","tax","validShippingCost","Number","grandTotal","boxRef","showScrollIcon","setShowScrollIcon","checkOverflow","isOverflowing","scrollHeight","clientHeight","addEventListener","removeEventListener","disablePadding","ref","minHeight","overflow","mt","borderBottom","gutterBottom","align","fontVariant","to","Link","borderRadius","mx","Badge","badgeContent","img","fontFamily","fontVariantCaps","lineHeight","specs","price","RemoveIcon","AddIcon","scrollToBottom","scrollTop","right","bottom","backdropFilter","ArrowDownwardIcon","padding","arrow","InfoOutlinedIcon","cursor","onPaymentProcess","PaymentForm","applicationId","locationId","cardTokenizeResponseReceived","paymentToken","CreditCard","modalStyle","divStyle","textStyle","CircularProgressWithLabel","props","top","left","round","open","progress","setProgress","timer","setInterval","prevProgress","clearInterval","Modal","closeAfterTransition","Fade","in","timeout","CheckoutPage","setAttribute","isSquareSdkLoaded","setIsSquareSdkLoaded","navigate","useNavigate","useParams","activeStep","parseInt","steps","cart","notes","clearCart","useCart","setShippingCost","reduce","acc","product","setIsLoading","orderData","setOrderData","estimatedShipping","snackbarOpen","setSnackbarOpen","paymentError","setPaymentError","openConfirmDialog","setOpenConfirmDialog","handleCloseSnackbar","reason","handleCloseDialog","setFormData","cleanupSquareSdk","squareScript","loadSquareSdk","onload","onerror","finalizeOrderAndProcessPayment","paymentAmount","trackingInfo","createShippingLabelAsync","shippingMethod","carrier","provider","trackingNumber","tracking_number","trackingUrl","tracking_url_provider","labelUrl","label_url","paymentResult","processPaymentAsync","success","transactionId","result","payment","paymentStatus","createdBy","createdByType","createdOrder","createOrderAsync","guestData","orders","updateGuestDataAsync","isVerified","clear","updatedCustomerData","updateCustomerDataAsync","isGuest","customerEmail","customer","customerPhone","products","productId","imgSource","carrierAccountId","carrier_account","serviceLevelToken","amountCharged","totalAmount","orderNotes","handleNext","sourceId","orderDetails","last4","card","orderResponse","handleBack","LoadingModal","flex","zIndex","pt","handleBrandIconClick","BrandIcon","Stepper","alternativeLabel","bgcolor","Step","StepLabel","borderTop","CartSummaryComponent","InformationPage","onFormChange","handleFormChange","prevFormData","ShippingComponent","shipping","dimensions","handleShippingOptions","options","info","SquarePaymentForm","paymentForm","SqPaymentForm","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","action","underline","boxShadow","p","marginBottom","handleConfirmNavigation"],"sourceRoot":""}