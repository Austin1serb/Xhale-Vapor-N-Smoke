{"version":3,"file":"static/js/8.797e9e3f.chunk.js","mappings":"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","sources":["components/DropDownMenu.jsx"],"sourcesContent":["import { Box, Button, CircularProgress, IconButton, List, ListItem, Paper, } from '@mui/material';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport '../Styles/DropDownMenu.css';\nimport { Link } from 'react-router-dom';\nimport { Collapse } from '@mui/material';\n\n\nconst QuickView = React.lazy(() => import('../components/QuickView'));\n\nconst DropdownMenu = ({ isVisible, onLinkClick }) => {\n    const [openedSection, setOpenedSection] = useState(false);\n    const [featuredProducts, setFeaturedProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [quickViewOpen, setQuickViewOpen] = useState(false);\n    const [quickViewProduct, setQuickViewProduct] = useState(null);\n\n\n\n    const fetchFeaturedProducts = async () => {\n\n        setLoading(true);\n        try {\n            const response = await fetch('http://localhost:8000/api/product/featured?limit=3');\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            setFeaturedProducts(data);\n        } catch (error) {\n            console.error(\"Could not fetch featured products:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n\n        const handleResize = () => {\n            // Check if window width is greater than 900px\n            if (window.innerWidth > 900) {\n                if (isVisible && featuredProducts.length === 0) {\n                    fetchFeaturedProducts();\n                }\n            } else {\n                // Optionally, clear the featured products if the window is resized to less than 900px\n                setFeaturedProducts([]);\n            }\n        };\n\n        // Attach resize event listener\n        window.addEventListener('resize', handleResize);\n\n        // Initial check on component mount\n        handleResize();\n\n        // Cleanup function\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [isVisible, featuredProducts.length]);\n\n\n    const handleToggleSection = (sectionName) => {\n        if (openedSection === sectionName) {\n            setOpenedSection(null);\n        } else {\n            setOpenedSection(sectionName);\n        }\n    };\n    const debounce = (func, wait) => {\n        let timeout;\n        return (...args) => {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => func.apply(this, args), wait);\n        };\n    };\n\n\n    useEffect(() => {\n        // Check screen width on mount\n        if (window.innerWidth <= 900) {\n            setOpenedSection(null);\n        }\n\n        // Debounced resize handler\n        const handleResize = debounce(() => {\n            if (window.innerWidth <= 900) {\n                setOpenedSection(null);\n            }\n        }, 150); // Here 150ms is the delay. Adjust if needed.\n\n        window.addEventListener('resize', handleResize);\n\n        // Cleanup - remove the listener when the component unmounts\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n\n\n\n\n    const buttonStyle = {\n        fontSize: '10px',\n        padding: '5px',\n        borderRadius: '0px',\n        marginRight: '10px',\n        height: '26px'\n\n    }\n\n    const paddingSmScreen = { pl: { xs: 5, md: 0 }, }\n    return (\n        <Paper elevation={0} className=\"dropdown\" component='div' sx={{ boxShadow: '0 6px 6px rgba(0, 0, 0, 0.1)', }}\n        >\n            <Box className='dropdown-container'>\n                <Box component='div' sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, width: '92%', }}>\n                    <div className=\"dropdown-section\">\n                        <div className='list-header' onClick={() => {\n                            handleToggleSection('SHOP_ALL_CBD');\n\n                        }}>\n\n                            <span className=\"list-content\">SHOP ALL</span>\n\n                            <IconButton className='icon-button-dropdown' sx={{ display: { md: 'none' } }}>\n\n                                <svg height='40' className={`arrow-icon ${openedSection === 'SHOP_ALL_CBD' && 'rotate'}`} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z\" /></svg>\n                            </IconButton>\n\n                        </div>\n\n                        <Collapse in={openedSection === 'SHOP_ALL_CBD' || window.innerWidth > 900}>\n                            <List sx={paddingSmScreen} className='list-container' >\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">Shop All A-Z</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=best-sellers\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">Best Sellers</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=new-products\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">New Products</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=high-potency\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">High Potency</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=featured\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">Featured </span>\n                                </ListItem>\n                            </List>\n                        </Collapse>\n                    </div>\n\n                    {/* SHOP BY CATEGORY Section */}\n                    <div className=\"dropdown-section\">\n                        <div className='list-header' onClick={() => handleToggleSection('SHOP_BY_CATEGORY')}>\n                            <span className=\"list-content\">SHOP BY CATEGORY</span>\n                            <IconButton className='icon-button-dropdown' sx={{ display: { md: 'none' } }}>\n\n                                <svg height='40' className={`arrow-icon ${openedSection === 'SHOP_BY_CATEGORY' && 'rotate'}`} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z\" /></svg>\n                            </IconButton>\n                        </div>\n                        <Collapse in={openedSection === 'SHOP_BY_CATEGORY' || window.innerWidth > 900}>\n                            <List sx={paddingSmScreen} className='list-container'>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=gummies\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBD Gummies</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=oils\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBD Oils</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=pills\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBD Pills</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=topicals\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBD Topicals</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=tinctures\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBD Tinctures</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=edibles\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBD Edibles</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=cbd\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">THC-Free CBD</span>\n                                </ListItem>\n                            </List>\n                        </Collapse>\n\n                    </div>\n                    {/*MORE CANNABINOIDS Section*/}\n                    <div className=\"dropdown-section\">\n                        <div className='list-header' onClick={() => handleToggleSection('MORE_CANNABINOIDS')}>\n                            <span className=\"list-content\"> MORE CANNABINOIDS</span>\n                            <IconButton className='icon-button-dropdown' sx={{ display: { md: 'none' } }}>\n\n\n                                <svg height='40' className={`arrow-icon ${openedSection === 'MORE_CANNABINOIDS' && 'rotate'}`} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z\" /></svg>\n                            </IconButton>\n                        </div>\n                        <Collapse in={openedSection === 'MORE_CANNABINOIDS' || window.innerWidth > 900}>\n                            <List sx={paddingSmScreen} className='list-container'>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=cbn\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBN</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=cbg\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBG</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=CBDa\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">CBDa</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" component={Link} to=\"/shop?filter=delta 9\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">Delta 9</span>\n                                </ListItem>\n                            </List>\n                        </Collapse>\n                    </div>\n\n                    {/* OTHER PRODUCTS Section */}\n                    <div className=\"dropdown-section\" style={{ display: `${window.innerWidth >= 900 && window.innerWidth <= 1050 ? 'none' : 'block'}` }}>\n\n                        <div className='list-header' onClick={() => handleToggleSection('OTHER_PRODUCTS')}>\n                            <span className=\"list-content\">OTHER PRODUCTS</span>\n                            <IconButton className='icon-button-dropdown' sx={{ display: { md: 'none' } }}>\n\n\n                                <svg height='40' className={`arrow-icon ${openedSection === 'OTHER_PRODUCTS' && 'rotate'}`} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z\" /></svg>\n                            </IconButton>\n                        </div>\n                        <Collapse in={openedSection === 'OTHER_PRODUCTS' || window.innerWidth > 900}>\n                            <List sx={paddingSmScreen} className='list-container' >\n\n                                <ListItem className=\"list-item\" onClick={onLinkClick} component={Link} to=\"/shop?filter=mushrooms\">\n                                    <span className=\"list-content\">Mushroom Gummies</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" onClick={onLinkClick} component={Link} to=\"/shop?filter=kratom\">\n                                    <span className=\"list-content\">Kratom</span>\n                                </ListItem>\n                                <ListItem className=\"list-item\" onClick={onLinkClick} component={Link} to=\"/shop?filter=pet\">\n                                    <span className=\"list-content\">CBD for Pets</span>\n                                </ListItem>\n                            </List>\n\n                        </Collapse>\n                    </div>\n                    {/* \"Join Us\" Section */}\n                    <Box className=\"dropdown-section\" sx={{ display: { sm: 'block', md: 'none' } }}>\n                        <div className='list-header' onClick={() => handleToggleSection('JOIN_US')}>\n                            <span className=\"list-content\">Join Us</span>\n                            <IconButton className='icon-button-dropdown' sx={{ display: { md: 'none' } }}>\n\n\n                                <svg height='40' className={`arrow-icon ${openedSection === 'JOIN_US' && 'rotate'}`} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z\" /></svg>\n                            </IconButton>\n                        </div>\n                        <Collapse in={openedSection === 'JOIN_US' || window.innerWidth > 900}>\n\n                            <List sx={paddingSmScreen} className='list-container'>\n                                <ListItem className=\"list-item\" component={Link} to=\"/registration\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">Sign Up</span>\n                                </ListItem>\n                                {/* Add more list items if necessary */}\n                            </List>\n                        </Collapse>\n                    </Box>\n\n                    {/* \"About Us\" Section */}\n                    <Box className=\"dropdown-section\" sx={{ display: { sm: 'block', md: 'none' } }}>\n                        <div className='list-header' onClick={() => handleToggleSection('ABOUT_US')} >\n\n                            <span className=\"list-content\">About Us</span>\n                            <IconButton className='icon-button-dropdown' sx={{ display: { md: 'none' } }}>\n\n\n                                <svg height='40' className={`arrow-icon ${openedSection === 'ABOUT_US' && 'rotate'}`} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z\" /></svg>\n                            </IconButton>\n                        </div>\n                        <Collapse in={openedSection === 'ABOUT_US' || window.innerWidth > 900}>\n                            <List sx={paddingSmScreen} className='list-container'>\n                                <ListItem className=\"list-item\" component={Link} to=\"/about\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">Our Story</span>\n                                </ListItem>\n                                {/* Add more list items if necessary */}\n                            </List>\n                        </Collapse>\n                    </Box>\n\n                    {/* \"Support\" Section */}\n                    <Box className=\"dropdown-section\" sx={{ display: { sm: 'block', md: 'none' }, mb: 2 }}>\n                        <div className='list-header' onClick={() => handleToggleSection('SUPPORT')}>\n                            <span className=\"list-content\">Support</span>\n                            <IconButton className='icon-button-dropdown' sx={{ display: { md: 'none' } }}>\n\n\n                                <svg height='40' className={`arrow-icon ${openedSection === 'SUPPORT' && 'rotate'}`} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 15.0006L7.75732 10.758L9.17154 9.34375L12 12.1722L14.8284 9.34375L16.2426 10.758L12 15.0006Z\" /></svg>\n                            </IconButton>\n                        </div>\n                        <Collapse in={openedSection === 'SUPPORT' || window.innerWidth > 900}>\n                            <List sx={paddingSmScreen} className='list-container'>\n                                <ListItem className=\"list-item\" component={Link} to=\"/contact\" onClick={onLinkClick}>\n                                    <span className=\"list-content\">Customer Service</span>\n                                </ListItem>\n\n                            </List>\n                        </Collapse>\n                    </Box>\n                </Box>\n\n                {loading ?\n                    <Box><CircularProgress /></Box> :\n                    <Box className='dropdown-featured' sx={{ ml: { ms: 0, lg: -10 } }}>\n                        <legend className='dropdown-featured-header' >Featured Products</legend>\n                        {featuredProducts.map((product) => (\n                            <Box onClick={() => {\n                                setQuickViewProduct(product._id);\n                                setQuickViewOpen(true);\n                            }} className='drowdown-featured-container' key={product._id}> {/* Use `_id` or appropriate key property */}\n                                <img className='dropdown-featured-img' alt='featured' src={product.imgSource[0].url}\n                                    loading='lazy' />\n                                <Box>\n\n                                    <Box className='dropdown-featured-name'>{product.name}</Box>\n\n                                    <Box className='dropdown-featured-price' >${product.price}\n                                        <Button variant='outlined' sx={buttonStyle} className='dropdown-featured-button' >Quick View</Button>\n                                    </Box>\n\n                                </Box>\n\n                            </Box>\n                        ))}\n                    </Box>\n                }\n\n\n            </Box>\n            <Box sx={{ textAlign: 'center', mt: 5, borderBottom: .5 }}>\n                Herba Natural Co\n            </Box>\n            <Suspense fallback={<CircularProgress />}>\n\n                <QuickView\n                    productId={quickViewProduct}\n                    open={quickViewOpen}\n                    handleClose={() => setQuickViewOpen(false)}\n                    products={featuredProducts}\n                />\n\n            </Suspense>\n        </Paper>\n\n\n    );\n};\n\nexport default DropdownMenu;\n"],"names":["QuickView","React","_ref","isVisible","onLinkClick","openedSection","setOpenedSection","useState","featuredProducts","setFeaturedProducts","loading","setLoading","quickViewOpen","setQuickViewOpen","quickViewProduct","setQuickViewProduct","useEffect","handleResize","window","innerWidth","length","async","response","fetch","ok","Error","concat","status","data","json","error","console","fetchFeaturedProducts","addEventListener","removeEventListener","handleToggleSection","sectionName","debounce","func","wait","timeout","_len","arguments","args","Array","_key","clearTimeout","setTimeout","apply","buttonStyle","fontSize","padding","borderRadius","marginRight","height","paddingSmScreen","pl","xs","md","_jsxs","Paper","elevation","className","component","sx","boxShadow","children","Box","display","flexDirection","width","onClick","_jsx","IconButton","viewBox","xmlns","d","Collapse","in","List","ListItem","Link","to","style","sm","mb","CircularProgress","ml","ms","lg","map","product","_id","alt","src","imgSource","url","name","price","Button","variant","textAlign","mt","borderBottom","Suspense","fallback","productId","open","handleClose","products"],"sourceRoot":""}